// BEGIN EEYORE
//--- GLOBAL DECL

//--- GLOBAL INIT

//--- FUNCTIONS
f_lengthOfLastWord [2]
var t0
var T0 // local: c
var t1
var t2
var t3
var t4
var t5
var t6
var t7
var t8
var t9
var T1 // local: i
var t10
var t11
var t12
var t13
var t14
var t15
var t16
var t17
var t18
var t19
var t20
var t21
    if p1 != 0 goto l0 // stmt: ifonly
    return 0
    l0: // stmt: ifonly - lskip
    T0 = p1 - 1
    l1: // stmt: while - ltest
    t2 = 0 // stmt: op and - default value
    if T0 <= -1 goto l3 // stmt: op and - test 1
    t6 = 4 * T0
    t7 = p0 + t6
    t5 = t7 [0]
    if t5 != 0 goto l3 // stmt: op and - test 2
    t2 = 1 // stmt: op and - passed test
    l3: // stmt: op and - lskip
    if t2 == 0 goto l2 // stmt: while - done
    T0 = T0 - 1
    goto l1 // stmt: while - to test
    l2: // stmt: while - ldone
    if T0 != -1 goto l4 // stmt: ifonly
    return 0
    l4: // stmt: ifonly - lskip
    T1 = T0
    l5: // stmt: while - ltest
    if T1 <= -1 goto l6 // stmt: while - done
    t13 = 4 * T1
    t14 = p0 + t13
    t12 = t14 [0]
    if t12 != 0 goto l7 // stmt: ifonly
    t17 = p1 - T1
    t16 = t17 - 1
    t19 = p1 - 1
    t18 = t19 - T0
    t15 = t16 - t18
    return t15
    l7: // stmt: ifonly - lskip
    T1 = T1 - 1
    goto l5 // stmt: while - to test
    l6: // stmt: while - ldone
    t21 = T0 - T1
    return t21
    return 0 // stmt: func epilog
end f_lengthOfLastWord

f_main [0]
var T2 // local: res
var 40 T3 // local: a
var t22
var t23
    T3 [0] = -4
    T3 [4] = 3
    T3 [8] = 9
    T3 [12] = -2
    T3 [16] = 0
    T3 [20] = 1
    T3 [24] = -6
    T3 [28] = 5
    T3 [32] = 7
    T3 [36] = 8
    T2 = 10
    t23 = T3 + 0 // stmt: param array access
    param t23 // #0
    param T2 // #1
    T2 = call f_lengthOfLastWord
    return T2
    return 0 // stmt: func epilog
end f_main

// END EEYORE
