// BEGIN EEYORE
//--- GLOBAL DECL

//--- GLOBAL INIT

//--- FUNCTIONS
f_main [0]
var T0 // local: a
var T1 // local: b
var T2 // local: c
var T3 // local: d
var T4 // local: result
var t0
var t1
var t2
var t3
var t4
var t5
var t6
var t7
var t8
var t9
var t10
var t11
var t12
var t13
var t14
var t15
var t16
var t17
var t18
var t19
    T0 = 5
    T1 = 5
    T2 = 1
    T3 = -2
    T4 = 2
    t0 = 1 // stmt: op or - default value
    t3 = T3 * 1
    t2 = t3 / 2
    if t2 < 0 goto l0 // stmt: op or - test 1
    t4 = 0 // stmt: op and - default value
    t6 = T0 - T1
    if t6 == 0 goto l1 // stmt: op and - test 1
    t9 = T2 + 3
    t8 = t9 % 2
    if t8 == 0 goto l1 // stmt: op and - test 2
    t4 = 1 // stmt: op and - passed test
    l1: // stmt: op and - lskip
    if t4 != 0 goto l0 // stmt: op or - test 2
    t0 = 0 // stmt: op or - passed test
    l0: // stmt: op or - lskip
    if t0 == 0 goto l2 // stmt: ifonly
    param T4 // #0
    call f_putint
    l2: // stmt: ifonly - lskip
    t10 = 1 // stmt: op or - default value
    t13 = T3 % 2
    t12 = t13 + 67
    if t12 < 0 goto l3 // stmt: op or - test 1
    t14 = 0 // stmt: op and - default value
    t16 = T0 - T1
    if t16 == 0 goto l4 // stmt: op and - test 1
    t19 = T2 + 2
    t18 = t19 % 2
    if t18 == 0 goto l4 // stmt: op and - test 2
    t14 = 1 // stmt: op and - passed test
    l4: // stmt: op and - lskip
    if t14 != 0 goto l3 // stmt: op or - test 2
    t10 = 0 // stmt: op or - passed test
    l3: // stmt: op or - lskip
    if t10 == 0 goto l5 // stmt: ifonly
    T4 = 4
    param T4 // #0
    call f_putint
    l5: // stmt: ifonly - lskip
    return 0
    return 0 // stmt: func epilog
end f_main

// END EEYORE
