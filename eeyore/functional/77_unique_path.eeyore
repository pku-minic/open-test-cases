// BEGIN EEYORE
//--- GLOBAL DECL

//--- GLOBAL INIT

//--- FUNCTIONS
f_uniquePaths [2]
var t0
var t1
var t2
var 36 T0 // local: dp
var T1 // local: i
var T2 // local: j
var t3
var t4
var t5
var t6
var t7
var t8
var t9
var t10
var t11
var t12
var t13
var t14
var t15
var t16
var t17
var t18
var t19
var t20
var t21
var t22
var t23
var t24
var t25
var t26
var t27
var t28
var t29
var t30
var t31
var t32
var t33
var t34
var t35
var t36
var t37
var t38
var t39
var t40
    t0 = 1 // stmt: op or - default value
    if p0 == 1 goto l0 // stmt: op or - test 1
    if p1 == 1 goto l0 // stmt: op or - test 2
    t0 = 0 // stmt: op or - passed test
    l0: // stmt: op or - lskip
    if t0 == 0 goto l1 // stmt: ifonly
    return 1
    l1: // stmt: ifonly - lskip
    T1 = 0
    l2: // stmt: while - ltest
    if T1 >= p0 goto l3 // stmt: while - done
    t7 = T1 * 3
    t6 = t7 + p1
    t5 = t6 - 1
    t4 = 4 * t5
    t8 = T0 + t4
    t8 [0] = 1
    T1 = T1 + 1
    goto l2 // stmt: while - to test
    l3: // stmt: while - ldone
    T1 = 0
    l4: // stmt: while - ltest
    if T1 >= p1 goto l5 // stmt: while - done
    t14 = p0 - 1
    t13 = t14 * 3
    t12 = t13 + T1
    t11 = 4 * t12
    t15 = T0 + t11
    t15 [0] = 1
    T1 = T1 + 1
    goto l4 // stmt: while - to test
    l5: // stmt: while - ldone
    T1 = p0 - 2
    l6: // stmt: while - ltest
    if T1 <= -1 goto l7 // stmt: while - done
    T2 = p1 - 2
    l8: // stmt: while - ltest
    if T2 <= -1 goto l9 // stmt: while - done
    t26 = T1 + 1
    t25 = t26 * 3
    t24 = t25 + T2
    t23 = 4 * t24
    t27 = T0 + t23
    t22 = t27 [0]
    t32 = T1 * 3
    t31 = t32 + T2
    t30 = t31 + 1
    t29 = 4 * t30
    t33 = T0 + t29
    t28 = t33 [0]
    t21 = t22 + t28
    t36 = T1 * 3
    t35 = t36 + T2
    t34 = 4 * t35
    t37 = T0 + t34
    t37 [0] = t21
    T2 = T2 - 1
    goto l8 // stmt: while - to test
    l9: // stmt: while - ldone
    T1 = T1 - 1
    goto l6 // stmt: while - to test
    l7: // stmt: while - ldone
    t40 = T0 [0]
    return t40
    return 0 // stmt: func epilog
end f_uniquePaths

f_main [0]
var T3 // local: res
var T4 // local: n
var t41
    T4 = 3
    param T4 // #0
    param T4 // #1
    T3 = call f_uniquePaths
    return T3
    return 0 // stmt: func epilog
end f_main

// END EEYORE
