// BEGIN EEYORE
//--- GLOBAL DECL

//--- GLOBAL INIT

//--- FUNCTIONS
f_wc [2]
var T0 // local: inWord
var T1 // local: i
var T2 // local: count
var t0
var t1
var t2
var t3
var t4
var t5
var t6
var t7
    T1 = 0
    T0 = 0
    T2 = 0
    l0: // stmt: while - ltest
    if T1 >= p1 goto l1 // stmt: while - done
    t3 = 4 * T1
    t4 = p0 + t3
    t2 = t4 [0]
    if t2 == 32 goto l2 // stmt: ifelse
    if T0 != 0 goto l3 // stmt: ifonly
    T2 = T2 + 1
    T0 = 1
    l3: // stmt: ifonly - lskip
    goto l4 // stmt: ifelse - true done
    l2: // stmt: ifelse - lfalse
    T0 = 0
    l4: // stmt: ifelse - ldone
    T1 = T1 + 1
    goto l0 // stmt: while - to test
    l1: // stmt: while - ldone
    return T2
    return 0 // stmt: func epilog
end f_wc

f_main [0]
var 2000 T3 // local: string
var T4 // local: temp
var T5 // local: i
var t8
var t9
var t10
var t11
var t12
var t13
var t14
    T5 = 0
    T4 = 0
    l5: // stmt: while - ltest
    if T4 == 10 goto l6 // stmt: while - done
    T4 = call f_getch
    t10 = 4 * T5
    t11 = T3 + t10
    t11 [0] = T4
    T5 = T5 + 1
    goto l5 // stmt: while - to test
    l6: // stmt: while - ldone
    t14 = T3 + 0 // stmt: param array access
    param t14 // #0
    param T5 // #1
    T4 = call f_wc
    param T4 // #0
    call f_putint
    return 0
    return 0 // stmt: func epilog
end f_main

// END EEYORE
