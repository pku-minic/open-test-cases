// BEGIN EEYORE
//--- GLOBAL DECL
var T0 // global: g
var T1 // global: h
var T2 // global: f
var T3 // global: e

//--- GLOBAL INIT

//--- FUNCTIONS
f_EightWhile [0]
var T4 // local: a
var T5 // local: b
var T6 // local: c
var T7 // local: d
var t0
var t1
var t2
var t3
var t4
var t5
var t6
var t7
var t8
var t9
var t10
var t11
var t12
var t13
var t14
var t15
var t16
var t17
var t18
var t19
var t20
var t21
var t22
var t23
var t24
var t25
var t26
var t27
var t28
var t29
    T4 = 5
    T5 = 6
    T6 = 7
    T7 = 10
    l0: // stmt: while - ltest
    if T4 >= 20 goto l1 // stmt: while - done
    T4 = T4 + 3
    l2: // stmt: while - ltest
    if T5 >= 10 goto l3 // stmt: while - done
    T5 = T5 + 1
    l4: // stmt: while - ltest
    if T6 != 7 goto l5 // stmt: while - done
    T6 = T6 - 1
    l6: // stmt: while - ltest
    if T7 >= 20 goto l7 // stmt: while - done
    T7 = T7 + 3
    l8: // stmt: while - ltest
    if T3 <= 1 goto l9 // stmt: while - done
    T3 = T3 - 1
    l10: // stmt: while - ltest
    if T2 <= 2 goto l11 // stmt: while - done
    T2 = T2 - 2
    l12: // stmt: while - ltest
    if T0 >= 3 goto l13 // stmt: while - done
    T0 = T0 + 10
    l14: // stmt: while - ltest
    if T1 >= 10 goto l15 // stmt: while - done
    T1 = T1 + 8
    goto l14 // stmt: while - to test
    l15: // stmt: while - ldone
    T1 = T1 - 1
    goto l12 // stmt: while - to test
    l13: // stmt: while - ldone
    T0 = T0 - 8
    goto l10 // stmt: while - to test
    l11: // stmt: while - ldone
    T2 = T2 + 1
    goto l8 // stmt: while - to test
    l9: // stmt: while - ldone
    T3 = T3 + 1
    goto l6 // stmt: while - to test
    l7: // stmt: while - ldone
    T7 = T7 - 1
    goto l4 // stmt: while - to test
    l5: // stmt: while - ldone
    T6 = T6 + 1
    goto l2 // stmt: while - to test
    l3: // stmt: while - ldone
    T5 = T5 - 2
    goto l0 // stmt: while - to test
    l1: // stmt: while - ldone
    t26 = T5 + T7
    t25 = T4 + t26
    t24 = t25 + T6
    t29 = T3 + T7
    t28 = t29 - T0
    t27 = t28 + T1
    t23 = t24 - t27
    return t23
    return 0 // stmt: func epilog
end f_EightWhile

f_main [0]
var t30
    T0 = 1
    T1 = 2
    T3 = 4
    T2 = 6
    t30 = call f_EightWhile
    return t30
    return 0 // stmt: func epilog
end f_main

// END EEYORE
