f_canJump [2]
  var t0
  var t1
  var t2
  var t3
  var 40 T0
  var T1
  var t4
  var t5
  var t6
  var t7
  var t8
  var t9
  var t10
  var t11
  var T2
  var t12
  var t13
  var t14
  var t15
  var t16
  var t17
  var t18
  var t19
  var t20
  var t21
  var t22
  var t23
  var t24
  var t25
  var t26
  var t27
  var t28
  var t29
  t0 = p1 == 1
  if t0 == 0 goto l0
  return 1
l0:
  t1 = p0 [ 0 ]
  t2 = p1 - 2
  t3 = t1 > t2
  if t3 == 0 goto l1
  return 1
l1:
  T1 = 0
l2:
  t4 = p1 - 1
  t5 = T1 < t4
  if t5 == 0 goto l3
  t6 = T1 * 4
  T0 [ t6 ] = 0
  t7 = T1 + 1
  T1 = t7
  goto l2
l3:
  t8 = p1 - 1
  t9 = t8 * 4
  T0 [ t9 ] = 1
  t10 = p1 - 2
  T1 = t10
l4:
  t11 = T1 > -1
  if t11 == 0 goto l10
  t12 = T1 * 4
  t13 = p0 [ t12 ]
  t14 = p1 - 1
  t15 = t14 - T1
  t16 = t13 < t15
  if t16 == 0 goto l5
  t17 = T1 * 4
  t18 = p0 [ t17 ]
  T2 = t18
  goto l6
l5:
  t19 = p1 - 1
  t20 = t19 - T1
  T2 = t20
l6:
l7:
  t21 = T2 > -1
  if t21 == 0 goto l9
  t22 = T1 + T2
  t23 = t22 * 4
  t24 = T0 [ t23 ]
  t25 = t24 != 0
  if t25 == 0 goto l8
  t26 = T1 * 4
  T0 [ t26 ] = 1
l8:
  t27 = T2 - 1
  T2 = t27
  goto l7
l9:
  t28 = T1 - 1
  T1 = t28
  goto l4
l10:
  t29 = T0 [ 0 ]
  return t29
end f_canJump
f_main [0]
  var T3
  var 40 T4
  var t30
  var t31
  var t32
  var t33
  T4 [ 0 ] = 3
  T4 [ 4 ] = 3
  T4 [ 8 ] = 9
  T4 [ 12 ] = 0
  T4 [ 16 ] = 0
  T4 [ 20 ] = 1
  T4 [ 24 ] = 1
  T4 [ 28 ] = 5
  T4 [ 32 ] = 7
  T4 [ 36 ] = 8
  T3 = 10
  t30 = T4 + 0
  t31 = t30
  t32 = T3
  param t31
  param t32
  t33 = call f_canJump
  T3 = t33
  return T3
end f_main
