// BEGIN EEYORE
//--- GLOBAL DECL

//--- GLOBAL INIT

//--- FUNCTIONS
f_atoi_ [1]
var T0 // local: s
var T1 // local: isMinus
var T2 // local: i
var t0
var t1
var t2
var t3
var t4
var t5
var t6
var t7
var t8
var t9
var t10
var t11
var t12
var t13
var t14
var t15
var t16
var t17
var t18
var t19
var t20
var t21
var t22
var t23
var t24
var t25
var t26
var t27
var t28
var t29
var t30
var t31
var t32
var t33
var t34
var t35
var t36
var t37
var t38
var t39
var t40
var t41
var t42
var t43
var t44
var t45
var t46
var t47
var t48
var t49
    T0 = 0
    T1 = 1
    T2 = 0
    l0: // stmt: while - ltest
    t2 = 4 * T2
    t3 = p0 + t2
    t1 = t3 [0]
    if t1 != 32 goto l1 // stmt: while - done
    T2 = T2 + 1
    goto l0 // stmt: while - to test
    l1: // stmt: while - ldone
    t5 = 1 // stmt: op or - default value
    t8 = 4 * T2
    t9 = p0 + t8
    t7 = t9 [0]
    if t7 == 43 goto l2 // stmt: op or - test 1
    t12 = 4 * T2
    t13 = p0 + t12
    t11 = t13 [0]
    if t11 == 45 goto l2 // stmt: op or - test 2
    t5 = 0 // stmt: op or - passed test
    l2: // stmt: op or - lskip
    if t5 == 0 goto l3 // stmt: ifelse
    t16 = 4 * T2
    t17 = p0 + t16
    t15 = t17 [0]
    if t15 != 45 goto l4 // stmt: ifonly
    T1 = -1
    l4: // stmt: ifonly - lskip
    T2 = T2 + 1
    goto l5 // stmt: ifelse - true done
    l3: // stmt: ifelse - lfalse
    t19 = 1 // stmt: op or - default value
    t22 = 4 * T2
    t23 = p0 + t22
    t21 = t23 [0]
    if t21 < 48 goto l6 // stmt: op or - test 1
    t26 = 4 * T2
    t27 = p0 + t26
    t25 = t27 [0]
    if t25 > 57 goto l6 // stmt: op or - test 2
    t19 = 0 // stmt: op or - passed test
    l6: // stmt: op or - lskip
    if t19 == 0 goto l7 // stmt: ifonly
    T0 = 2147483647
    return T0
    l7: // stmt: ifonly - lskip
    l5: // stmt: ifelse - ldone
    l8: // stmt: while - ltest
    t28 = 0 // stmt: op and - default value
    t29 = 0 // stmt: op and - default value
    t32 = 4 * T2
    t33 = p0 + t32
    t31 = t33 [0]
    if t31 == 0 goto l11 // stmt: op and - test 1
    t36 = 4 * T2
    t37 = p0 + t36
    t35 = t37 [0]
    if t35 <= 47 goto l11 // stmt: op and - test 2
    t29 = 1 // stmt: op and - passed test
    l11: // stmt: op and - lskip
    if t29 == 0 goto l10 // stmt: op and - test 1
    t40 = 4 * T2
    t41 = p0 + t40
    t39 = t41 [0]
    if t39 >= 58 goto l10 // stmt: op and - test 2
    t28 = 1 // stmt: op and - passed test
    l10: // stmt: op and - lskip
    if t28 == 0 goto l9 // stmt: while - done
    t44 = T0 * 10
    t46 = 4 * T2
    t47 = p0 + t46
    t45 = t47 [0]
    t43 = t44 + t45
    T0 = t43 - 48
    T2 = T2 + 1
    goto l8 // stmt: while - to test
    l9: // stmt: while - ldone
    t49 = T0 * T1
    return t49
    return 0 // stmt: func epilog
end f_atoi_

f_main [0]
var 2000 T3 // local: string
var T4 // local: temp
var T5 // local: i
var t50
var t51
var t52
var t53
var t54
var t55
var t56
var t57
var t58
    T4 = 0
    T5 = 0
    l12: // stmt: while - ltest
    if T4 == 10 goto l13 // stmt: while - done
    T4 = call f_getch
    t52 = 4 * T5
    t53 = T3 + t52
    t53 [0] = T4
    T5 = T5 + 1
    goto l12 // stmt: while - to test
    l13: // stmt: while - ldone
    t55 = 4 * T5
    t56 = T3 + t55
    t56 [0] = 0
    t58 = T3 + 0 // stmt: param array access
    param t58 // #0
    T5 = call f_atoi_
    param T5 // #0
    call f_putint
    return 0
    return 0 // stmt: func epilog
end f_main

// END EEYORE
