// BEGIN EEYORE
//--- GLOBAL DECL

//--- GLOBAL INIT

//--- FUNCTIONS
f_main [0]
var T0 // local: i
var T1 // local: sum
var 40 T2 // local: a
var t0
var t1
var t2
var t3
var t4
var T3 // local: x
var T4 // local: high
var T5 // local: low
var T6 // local: mid
var T7 // local: n
var t5
var t6
var t7
var t8
var T8 // local: flag
var T9 // local: j
var t9
var t10
var t11
var t12
var t13
var t14
var t15
var t16
var t17
    T1 = 0
    T0 = 0
    l0: // stmt: while - ltest
    if T0 >= 10 goto l1 // stmt: while - done
    t1 = T0 + 1
    t2 = 4 * T0
    t3 = T2 + t2
    t3 [0] = t1
    T0 = T0 + 1
    goto l0 // stmt: while - to test
    l1: // stmt: while - ldone
    T7 = 10
    T3 = call f_getint
    T4 = T7 - 1
    T5 = 0
    t8 = T4 + T5
    T6 = t8 / 2
    T8 = 0
    T0 = 0
    T9 = 0
    l2: // stmt: while - ltest
    t9 = 0 // stmt: op and - default value
    if T0 >= 10 goto l4 // stmt: op and - test 1
    if T8 != 0 goto l4 // stmt: op and - test 2
    t9 = 1 // stmt: op and - passed test
    l4: // stmt: op and - lskip
    if t9 == 0 goto l3 // stmt: while - done
    t14 = 4 * T0
    t15 = T2 + t14
    t13 = t15 [0]
    if t13 != T3 goto l5 // stmt: ifonly
    T8 = 1
    T9 = T0
    l5: // stmt: ifonly - lskip
    T0 = T0 + 1
    goto l2 // stmt: while - to test
    l3: // stmt: while - ldone
    if T8 != 1 goto l6 // stmt: ifelse
    param T9 // #0
    call f_putint
    goto l7 // stmt: ifelse - true done
    l6: // stmt: ifelse - lfalse
    T3 = 0
    param T3 // #0
    call f_putint
    l7: // stmt: ifelse - ldone
    T3 = 10
    param T3 // #0
    call f_putch
    return 0
    return 0 // stmt: func epilog
end f_main

// END EEYORE
