// BEGIN EEYORE
//--- GLOBAL DECL
var T0 // global: n

//--- GLOBAL INIT

//--- FUNCTIONS
f_QuickSort [3]
var t0
var T1 // local: i
var T2 // local: j
var T3 // local: k
var t1
var t2
var t3
var t4
var t5
var t6
var t7
var t8
var t9
var t10
var t11
var t12
var t13
var t14
var t15
var t16
var t17
var t18
var t19
var t20
var t21
var t22
var t23
var t24
var t25
var t26
var t27
var t28
var t29
var t30
var t31
var t32
var t33
var t34
var t35
var T4 // local: tmp
var t36
var t37
var t38
var t39
var t40
var t41
    if p1 >= p2 goto l0 // stmt: ifonly
    T1 = p1
    T2 = p2
    t2 = 4 * p1
    t3 = p0 + t2
    t1 = t3 [0]
    T3 = t1
    l1: // stmt: while - ltest
    if T1 >= T2 goto l2 // stmt: while - done
    l3: // stmt: while - ltest
    t5 = 0 // stmt: op and - default value
    if T1 >= T2 goto l5 // stmt: op and - test 1
    t9 = 4 * T2
    t10 = p0 + t9
    t8 = t10 [0]
    t11 = T3 - 1
    if t8 <= t11 goto l5 // stmt: op and - test 2
    t5 = 1 // stmt: op and - passed test
    l5: // stmt: op and - lskip
    if t5 == 0 goto l4 // stmt: while - done
    T2 = T2 - 1
    goto l3 // stmt: while - to test
    l4: // stmt: while - ldone
    if T1 >= T2 goto l6 // stmt: ifonly
    t15 = 4 * T2
    t16 = p0 + t15
    t14 = t16 [0]
    t17 = 4 * T1
    t18 = p0 + t17
    t18 [0] = t14
    T1 = T1 + 1
    l6: // stmt: ifonly - lskip
    l7: // stmt: while - ltest
    t20 = 0 // stmt: op and - default value
    if T1 >= T2 goto l9 // stmt: op and - test 1
    t24 = 4 * T1
    t25 = p0 + t24
    t23 = t25 [0]
    if t23 >= T3 goto l9 // stmt: op and - test 2
    t20 = 1 // stmt: op and - passed test
    l9: // stmt: op and - lskip
    if t20 == 0 goto l8 // stmt: while - done
    T1 = T1 + 1
    goto l7 // stmt: while - to test
    l8: // stmt: while - ldone
    if T1 >= T2 goto l10 // stmt: ifonly
    t29 = 4 * T1
    t30 = p0 + t29
    t28 = t30 [0]
    t31 = 4 * T2
    t32 = p0 + t31
    t32 [0] = t28
    T2 = T2 - 1
    l10: // stmt: ifonly - lskip
    goto l1 // stmt: while - to test
    l2: // stmt: while - ldone
    t34 = 4 * T1
    t35 = p0 + t34
    t35 [0] = T3
    T4 = T1 - 1
    t38 = p0 + 0 // stmt: param array access
    param t38 // #0
    param p1 // #1
    param T4 // #2
    T4 = call f_QuickSort
    T4 = T1 + 1
    t41 = p0 + 0 // stmt: param array access
    param t41 // #0
    param T4 // #1
    param p2 // #2
    T4 = call f_QuickSort
    l0: // stmt: ifonly - lskip
    return 0
    return 0 // stmt: func epilog
end f_QuickSort

f_main [0]
var 40 T5 // local: a
var T6 // local: i
var T7 // local: tmp
var t42
var t43
var t44
var T8 // local: tmp
var t45
var t46
var t47
var t48
    T0 = 10
    T5 [0] = 4
    T5 [4] = 3
    T5 [8] = 9
    T5 [12] = 2
    T5 [16] = 0
    T5 [20] = 1
    T5 [24] = 6
    T5 [28] = 5
    T5 [32] = 7
    T5 [36] = 8
    T6 = 0
    T7 = 9
    t43 = T5 + 0 // stmt: param array access
    param t43 // #0
    param T6 // #1
    param T7 // #2
    T6 = call f_QuickSort
    l11: // stmt: while - ltest
    if T6 >= T0 goto l12 // stmt: while - done
    t46 = 4 * T6
    t47 = T5 + t46
    t45 = t47 [0]
    T8 = t45
    param T8 // #0
    call f_putint
    T8 = 10
    param T8 // #0
    call f_putch
    T6 = T6 + 1
    goto l11 // stmt: while - to test
    l12: // stmt: while - ldone
    return 0
    return 0 // stmt: func epilog
end f_main

// END EEYORE
