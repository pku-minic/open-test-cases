// BEGIN EEYORE
//--- GLOBAL DECL

//--- GLOBAL INIT

//--- FUNCTIONS
f_palindrome [1]
var 16 T0 // local: a
var T1 // local: j
var T2 // local: flag
var t0
var t1
var t2
var t3
var t4
var t5
var t6
var t7
var t8
var t9
var t10
var t11
var t12
    T1 = 0
    l0: // stmt: while - ltest
    if T1 >= 4 goto l1 // stmt: while - done
    t1 = p0 % 10
    t2 = 4 * T1
    t3 = T0 + t2
    t3 [0] = t1
    p0 = p0 / 10
    T1 = T1 + 1
    goto l0 // stmt: while - to test
    l1: // stmt: while - ldone
    t6 = 0 // stmt: op and - default value
    t8 = T0 [0]
    t9 = T0 [12]
    if t8 != t9 goto l2 // stmt: op and - test 1
    t11 = T0 [4]
    t12 = T0 [8]
    if t11 != t12 goto l2 // stmt: op and - test 2
    t6 = 1 // stmt: op and - passed test
    l2: // stmt: op and - lskip
    if t6 == 0 goto l3 // stmt: ifelse
    T2 = 1
    goto l4 // stmt: ifelse - true done
    l3: // stmt: ifelse - lfalse
    T2 = 0
    l4: // stmt: ifelse - ldone
    return T2
    return 0 // stmt: func epilog
end f_palindrome

f_main [0]
var T3 // local: test
var T4 // local: flag
var t13
var t14
    T3 = 1221
    param T3 // #0
    T4 = call f_palindrome
    if T4 != 1 goto l5 // stmt: ifelse
    param T3 // #0
    call f_putint
    goto l6 // stmt: ifelse - true done
    l5: // stmt: ifelse - lfalse
    T4 = 0
    param T4 // #0
    call f_putint
    l6: // stmt: ifelse - ldone
    T4 = 10
    param T4 // #0
    call f_putch
    return 0
    return 0 // stmt: func epilog
end f_main

// END EEYORE
