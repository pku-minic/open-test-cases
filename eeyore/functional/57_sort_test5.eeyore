var T0
f_swap [3]
  var T1
  var t0
  var t1
  var t2
  var t3
  var t4
  var t5
  t0 = p1 * 4
  t1 = p0 [ t0 ]
  T1 = t1
  t2 = p1 * 4
  t3 = p2 * 4
  t4 = p0 [ t3 ]
  p0 [ t2 ] = t4
  t5 = p2 * 4
  p0 [ t5 ] = T1
  return 0
end f_swap
f_heap_ajust [3]
  var T2
  var T3
  var t6
  var t7
  var t8
  var t9
  var t10
  var t11
  var t12
  var t13
  var t14
  var t15
  var t16
  var t17
  var t18
  var t19
  var t20
  var t21
  var t22
  var t23
  var t24
  var t25
  var t26
  var t27
  var t28
  var t29
  var t30
  T2 = p1
  t6 = T2 * 2
  t7 = t6 + 1
  T3 = t7
l0:
  t8 = p2 + 1
  t9 = T3 < t8
  if t9 == 0 goto l6
  t10 = T3 < p2
  if t10 == 0 goto l1
  t12 = T3 * 4
  t13 = p0 [ t12 ]
  t14 = T3 + 1
  t15 = t14 * 4
  t16 = p0 [ t15 ]
  t17 = t13 < t16
  if t17 == 0 goto l1
  t11 = 1
  goto l2
l1:
  t11 = 0
l2:
  if t11 == 0 goto l3
  t18 = T3 + 1
  T3 = t18
l3:
  t19 = T2 * 4
  t20 = p0 [ t19 ]
  t21 = T3 * 4
  t22 = p0 [ t21 ]
  t23 = t20 > t22
  if t23 == 0 goto l4
  return 0
  goto l5
l4:
  t24 = p0 + 0
  t25 = t24
  t26 = T2
  t27 = T3
  param t25
  param t26
  param t27
  t28 = call f_swap
  T2 = t28
  T2 = T3
  t29 = T2 * 2
  t30 = t29 + 1
  T3 = t30
l5:
  goto l0
l6:
  return 0
end f_heap_ajust
f_heap_sort [2]
  var T4
  var T5
  var t31
  var t32
  var t33
  var t34
  var t35
  var t36
  var t37
  var t38
  var t39
  var t40
  var t41
  var t42
  var T6
  var t43
  var t44
  var t45
  var t46
  var t47
  var t48
  var t49
  var t50
  var t51
  var t52
  var t53
  var t54
  t31 = p1 / 2
  t32 = t31 - 1
  T4 = t32
l7:
  t33 = T4 > -1
  if t33 == 0 goto l8
  t34 = p1 - 1
  T5 = t34
  t35 = p0 + 0
  t36 = t35
  t37 = T4
  t38 = T5
  param t36
  param t37
  param t38
  t39 = call f_heap_ajust
  T5 = t39
  t40 = T4 - 1
  T4 = t40
  goto l7
l8:
  t41 = p1 - 1
  T4 = t41
l9:
  t42 = T4 > 0
  if t42 == 0 goto l10
  T6 = 0
  t43 = p0 + 0
  t44 = t43
  t45 = T6
  t46 = T4
  param t44
  param t45
  param t46
  t47 = call f_swap
  T5 = t47
  t48 = T4 - 1
  T5 = t48
  t49 = p0 + 0
  t50 = t49
  t51 = T6
  t52 = T5
  param t50
  param t51
  param t52
  t53 = call f_heap_ajust
  T5 = t53
  t54 = T4 - 1
  T4 = t54
  goto l9
l10:
  return 0
end f_heap_sort
f_main [0]
  var 40 T7
  var T8
  var t55
  var t56
  var t57
  var t58
  var t59
  var T9
  var t60
  var t61
  var t62
  var t63
  var t64
  T0 = 10
  T7 [ 0 ] = 4
  T7 [ 4 ] = 3
  T7 [ 8 ] = 9
  T7 [ 12 ] = 2
  T7 [ 16 ] = 0
  T7 [ 20 ] = 1
  T7 [ 24 ] = 6
  T7 [ 28 ] = 5
  T7 [ 32 ] = 7
  T7 [ 36 ] = 8
  T8 = 0
  t55 = T7 + 0
  t56 = t55
  t57 = T0
  param t56
  param t57
  t58 = call f_heap_sort
  T8 = t58
l11:
  t59 = T8 < T0
  if t59 == 0 goto l12
  t60 = T8 * 4
  t61 = T7 [ t60 ]
  T9 = t61
  t62 = T9
  param t62
  call f_putint
  T9 = 10
  t63 = T9
  param t63
  call f_putch
  t64 = T8 + 1
  T8 = t64
  goto l11
l12:
  return 0
end f_main
