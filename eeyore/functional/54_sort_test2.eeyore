// BEGIN EEYORE
//--- GLOBAL DECL
var T0 // global: n

//--- GLOBAL INIT

//--- FUNCTIONS
f_insertsort [1]
var T1 // local: i
var t0
var T2 // local: temp
var t1
var t2
var t3
var T3 // local: j
var t4
var t5
var t6
var t7
var t8
var t9
var t10
var t11
var t12
var t13
var t14
var t15
var t16
var t17
var t18
var t19
var t20
var t21
    T1 = 1
    l0: // stmt: while - ltest
    if T1 >= T0 goto l1 // stmt: while - done
    t2 = 4 * T1
    t3 = p0 + t2
    t1 = t3 [0]
    T2 = t1
    T3 = T1 - 1
    l2: // stmt: while - ltest
    t5 = 0 // stmt: op and - default value
    if T3 <= -1 goto l4 // stmt: op and - test 1
    t9 = 4 * T3
    t10 = p0 + t9
    t8 = t10 [0]
    if T2 >= t8 goto l4 // stmt: op and - test 2
    t5 = 1 // stmt: op and - passed test
    l4: // stmt: op and - lskip
    if t5 == 0 goto l3 // stmt: while - done
    t12 = 4 * T3
    t13 = p0 + t12
    t11 = t13 [0]
    t15 = T3 + 1
    t14 = 4 * t15
    t16 = p0 + t14
    t16 [0] = t11
    T3 = T3 - 1
    goto l2 // stmt: while - to test
    l3: // stmt: while - ldone
    t19 = T3 + 1
    t18 = 4 * t19
    t20 = p0 + t18
    t20 [0] = T2
    T1 = T1 + 1
    goto l0 // stmt: while - to test
    l1: // stmt: while - ldone
    return 0
    return 0 // stmt: func epilog
end f_insertsort

f_main [0]
var 40 T4 // local: a
var T5 // local: i
var t22
var t23
var t24
var T6 // local: tmp
var t25
var t26
var t27
var t28
    T0 = 10
    T4 [0] = 4
    T4 [4] = 3
    T4 [8] = 9
    T4 [12] = 2
    T4 [16] = 0
    T4 [20] = 1
    T4 [24] = 6
    T4 [28] = 5
    T4 [32] = 7
    T4 [36] = 8
    t23 = T4 + 0 // stmt: param array access
    param t23 // #0
    T5 = call f_insertsort
    l5: // stmt: while - ltest
    if T5 >= T0 goto l6 // stmt: while - done
    t26 = 4 * T5
    t27 = T4 + t26
    t25 = t27 [0]
    T6 = t25
    param T6 // #0
    call f_putint
    T6 = 10
    param T6 // #0
    call f_putch
    T5 = T5 + 1
    goto l5 // stmt: while - to test
    l6: // stmt: while - ldone
    return 0
    return 0 // stmt: func epilog
end f_main

// END EEYORE
