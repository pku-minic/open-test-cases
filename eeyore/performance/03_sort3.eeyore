// BEGIN EEYORE
//--- GLOBAL DECL
var T0 // global: base
var 120000040 T12 // global: a
var T13 // global: ans

//--- GLOBAL INIT
T0 = 16 // init: base

//--- FUNCTIONS
f_getMaxNum [2]
var T1 // local: ret
var T2 // local: i
var t0
var t1
var t2
var t3
var t4
var t5
var t6
var t7
var t8
    T1 = 0 // stmt: ret
    T2 = 0 // stmt: i
    l0: // stmt: while - ltest
    if T2 >= p0 goto l1 // stmt: while - done
    t3 = 4 * T2
    t4 = p1 + t3
    t2 = t4 [0]
    if t2 <= T1 goto l2 // stmt: ifonly
    t6 = 4 * T2
    t7 = p1 + t6
    t5 = t7 [0]
    T1 = t5
    l2: // stmt: ifonly - lskip
    T2 = T2 + 1
    goto l0 // stmt: while - to test
    l1: // stmt: while - ldone
    return T1
    return 0 // stmt: func epilog
end f_getMaxNum

f_getNumPos [2]
var T3 // local: tmp
var T4 // local: i
var t9
var t10
var t11
var t12
    T3 = 1 // stmt: tmp
    T4 = 0 // stmt: i
    l3: // stmt: while - ltest
    if T4 >= p1 goto l4 // stmt: while - done
    p0 = p0 / 16
    T4 = T4 + 1
    goto l3 // stmt: while - to test
    l4: // stmt: while - ldone
    t12 = p0 % 16
    return t12
    return 0 // stmt: func epilog
end f_getNumPos

f_radixSort [4]
var 64 T5 // local: head
var 64 T6 // local: tail
var 64 T7 // local: cnt
var t13
var t14
var t15
var t16
var T8 // local: i
var t17
var t18
var t19
var t20
var t21
var t22
var t23
var t24
var t25
var t26
var t27
var t28
var t29
var t30
var t31
var t32
var t33
var t34
var t35
var t36
var t37
var t38
var t39
var t40
var t41
var t42
var t43
var t44
var t45
var t46
var t47
var t48
var t49
var t50
var t51
var t52
var t53
var t54
var t55
var t56
var t57
var t58
var t59
var T9 // local: v
var t60
var t61
var t62
var t63
var t64
var t65
var t66
var t67
var T10 // local: t
var t68
var t69
var t70
var t71
var t72
var t73
var t74
var t75
var t76
var t77
var t78
var t79
var t80
var t81
var t82
var t83
var t84
var t85
var t86
var t87
var t88
var t89
var t90
var t91
var t92
var t93
var t94
var t95
var t96
var t97
var t98
var t99
var t100
var T11 // local: i
var t101
var t102
var t103
var t104
var t105
var t106
var t107
var t108
var t109
var t110
var t111
var t112
var t113
var t114
var t115
var t116
var t117
var t118
var t119
var t120
var t121
var t122
var t123
var t124
var t125
var t126
var t127
var t128
    T5 [0] = 0 // local_array_fill_zero T5
    T5 [4] = 0 // local_array_fill_zero T5
    T5 [8] = 0 // local_array_fill_zero T5
    T5 [12] = 0 // local_array_fill_zero T5
    T5 [16] = 0 // local_array_fill_zero T5
    T5 [20] = 0 // local_array_fill_zero T5
    T5 [24] = 0 // local_array_fill_zero T5
    T5 [28] = 0 // local_array_fill_zero T5
    T5 [32] = 0 // local_array_fill_zero T5
    T5 [36] = 0 // local_array_fill_zero T5
    T5 [40] = 0 // local_array_fill_zero T5
    T5 [44] = 0 // local_array_fill_zero T5
    T5 [48] = 0 // local_array_fill_zero T5
    T5 [52] = 0 // local_array_fill_zero T5
    T5 [56] = 0 // local_array_fill_zero T5
    T5 [60] = 0 // local_array_fill_zero T5
    T6 [0] = 0 // local_array_fill_zero T6
    T6 [4] = 0 // local_array_fill_zero T6
    T6 [8] = 0 // local_array_fill_zero T6
    T6 [12] = 0 // local_array_fill_zero T6
    T6 [16] = 0 // local_array_fill_zero T6
    T6 [20] = 0 // local_array_fill_zero T6
    T6 [24] = 0 // local_array_fill_zero T6
    T6 [28] = 0 // local_array_fill_zero T6
    T6 [32] = 0 // local_array_fill_zero T6
    T6 [36] = 0 // local_array_fill_zero T6
    T6 [40] = 0 // local_array_fill_zero T6
    T6 [44] = 0 // local_array_fill_zero T6
    T6 [48] = 0 // local_array_fill_zero T6
    T6 [52] = 0 // local_array_fill_zero T6
    T6 [56] = 0 // local_array_fill_zero T6
    T6 [60] = 0 // local_array_fill_zero T6
    T7 [0] = 0 // local_array_fill_zero T7
    T7 [4] = 0 // local_array_fill_zero T7
    T7 [8] = 0 // local_array_fill_zero T7
    T7 [12] = 0 // local_array_fill_zero T7
    T7 [16] = 0 // local_array_fill_zero T7
    T7 [20] = 0 // local_array_fill_zero T7
    T7 [24] = 0 // local_array_fill_zero T7
    T7 [28] = 0 // local_array_fill_zero T7
    T7 [32] = 0 // local_array_fill_zero T7
    T7 [36] = 0 // local_array_fill_zero T7
    T7 [40] = 0 // local_array_fill_zero T7
    T7 [44] = 0 // local_array_fill_zero T7
    T7 [48] = 0 // local_array_fill_zero T7
    T7 [52] = 0 // local_array_fill_zero T7
    T7 [56] = 0 // local_array_fill_zero T7
    T7 [60] = 0 // local_array_fill_zero T7
    t13 = 1 // stmt: op or - default value
    if p0 == -1 goto l5 // stmt: op or - test 1
    t16 = p2 + 1
    if t16 >= p3 goto l5 // stmt: op or - test 2
    t13 = 0 // stmt: op or - passed test
    l5: // stmt: op or - lskip
    if t13 == 0 goto l6 // stmt: ifonly
    return
    l6: // stmt: ifonly - lskip
    T8 = p2 // stmt: i
    l7: // stmt: while - ltest
    if T8 >= p3 goto l8 // stmt: while - done
    t23 = 4 * T8
    t24 = p1 + t23
    t22 = t24 [0]
    param t22 // #0
    param p0 // #1
    t21 = call f_getNumPos
    t20 = 4 * t21
    t25 = T7 + t20
    t19 = t25 [0]
    t18 = t19 + 1
    t29 = 4 * T8
    t30 = p1 + t29
    t28 = t30 [0]
    param t28 // #0
    param p0 // #1
    t27 = call f_getNumPos
    t26 = 4 * t27
    t31 = T7 + t26
    t31 [0] = t18
    T8 = T8 + 1
    goto l7 // stmt: while - to test
    l8: // stmt: while - ldone
    T5 [0] = p2
    t34 = T7 [0]
    t33 = p2 + t34
    T6 [0] = t33
    T8 = 1
    l9: // stmt: while - ltest
    if T8 >= 16 goto l10 // stmt: while - done
    t38 = T8 - 1
    t37 = 4 * t38
    t39 = T6 + t37
    t36 = t39 [0]
    t40 = 4 * T8
    t41 = T5 + t40
    t41 [0] = t36
    t44 = 4 * T8
    t45 = T5 + t44
    t43 = t45 [0]
    t47 = 4 * T8
    t48 = T7 + t47
    t46 = t48 [0]
    t42 = t43 + t46
    t49 = 4 * T8
    t50 = T6 + t49
    t50 [0] = t42
    T8 = T8 + 1
    goto l9 // stmt: while - to test
    l10: // stmt: while - ldone
    T8 = 0
    l11: // stmt: while - ltest
    if T8 >= 16 goto l12 // stmt: while - done
    l13: // stmt: while - ltest
    t55 = 4 * T8
    t56 = T5 + t55
    t54 = t56 [0]
    t58 = 4 * T8
    t59 = T6 + t58
    t57 = t59 [0]
    if t54 >= t57 goto l14 // stmt: while - done
    t63 = 4 * T8
    t64 = T5 + t63
    t62 = t64 [0]
    t61 = 4 * t62
    t65 = p1 + t61
    t60 = t65 [0]
    T9 = t60 // stmt: v
    l15: // stmt: while - ltest
    param T9 // #0
    param p0 // #1
    t67 = call f_getNumPos
    if t67 == T8 goto l16 // stmt: while - done
    T10 = T9 // stmt: t
    param T10 // #0
    param p0 // #1
    t72 = call f_getNumPos
    t71 = 4 * t72
    t73 = T5 + t71
    t70 = t73 [0]
    t69 = 4 * t70
    t74 = p1 + t69
    t68 = t74 [0]
    T9 = t68
    param T10 // #0
    param p0 // #1
    t78 = call f_getNumPos
    t77 = 4 * t78
    t79 = T5 + t77
    t76 = t79 [0]
    t75 = 4 * t76
    t80 = p1 + t75
    t80 [0] = T10
    param T10 // #0
    param p0 // #1
    t84 = call f_getNumPos
    t83 = 4 * t84
    t85 = T5 + t83
    t82 = t85 [0]
    t81 = t82 + 1
    param T10 // #0
    param p0 // #1
    t87 = call f_getNumPos
    t86 = 4 * t87
    t88 = T5 + t86
    t88 [0] = t81
    goto l15 // stmt: while - to test
    l16: // stmt: while - ldone
    t91 = 4 * T8
    t92 = T5 + t91
    t90 = t92 [0]
    t89 = 4 * t90
    t93 = p1 + t89
    t93 [0] = T9
    t96 = 4 * T8
    t97 = T5 + t96
    t95 = t97 [0]
    t94 = t95 + 1
    t98 = 4 * T8
    t99 = T5 + t98
    t99 [0] = t94
    goto l13 // stmt: while - to test
    l14: // stmt: while - ldone
    T8 = T8 + 1
    goto l11 // stmt: while - to test
    l12: // stmt: while - ldone
    T11 = p2 // stmt: i
    T5 [0] = p2
    t102 = T7 [0]
    t101 = p2 + t102
    T6 [0] = t101
    T11 = 0
    l17: // stmt: while - ltest
    if T11 >= 16 goto l18 // stmt: while - done
    if T11 <= 0 goto l19 // stmt: ifonly
    t107 = T11 - 1
    t106 = 4 * t107
    t108 = T6 + t106
    t105 = t108 [0]
    t109 = 4 * T11
    t110 = T5 + t109
    t110 [0] = t105
    t113 = 4 * T11
    t114 = T5 + t113
    t112 = t114 [0]
    t116 = 4 * T11
    t117 = T7 + t116
    t115 = t117 [0]
    t111 = t112 + t115
    t118 = 4 * T11
    t119 = T6 + t118
    t119 [0] = t111
    l19: // stmt: ifonly - lskip
    t120 = p0 - 1
    t121 = p1 + 0 // stmt: param array access
    t123 = 4 * T11
    t124 = T5 + t123
    t122 = t124 [0]
    t126 = 4 * T11
    t127 = T6 + t126
    t125 = t127 [0]
    param t120 // #0
    param t121 // #1
    param t122 // #2
    param t125 // #3
    call f_radixSort
    T11 = T11 + 1
    goto l17 // stmt: while - to test
    l18: // stmt: while - ldone
    return
    return // stmt: func epilog
end f_radixSort

f_main [0]
var T14 // local: n
var t129
var t130
var t131
var T15 // local: i
var t132
var t133
var t134
var t135
var t136
var t137
var t138
var t139
var t140
var t141
var t142
    t130 = T12 + 0 // stmt: param array access
    param t130 // #0
    T14 = call f_getarray
    param 90 // #0
    call f__sysy_starttime
    t131 = T12 + 0 // stmt: param array access
    param 8 // #0
    param t131 // #1
    param 0 // #2
    param T14 // #3
    call f_radixSort
    T15 = 0 // stmt: i
    l20: // stmt: while - ltest
    if T15 >= T14 goto l21 // stmt: while - done
    t137 = 4 * T15
    t138 = T12 + t137
    t136 = t138 [0]
    t139 = 2 + T15
    t135 = t136 % t139
    t134 = T15 * t135
    T13 = T13 + t134
    T15 = T15 + 1
    goto l20 // stmt: while - to test
    l21: // stmt: while - ldone
    if T13 >= 0 goto l22 // stmt: ifonly
    T13 = - T13
    l22: // stmt: ifonly - lskip
    param 102 // #0
    call f__sysy_stoptime
    param T13 // #0
    call f_putint
    param 10 // #0
    call f_putch
    return 0
    return 0 // stmt: func epilog
end f_main

// END EEYORE
