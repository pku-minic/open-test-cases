// BEGIN EEYORE
//--- GLOBAL DECL
var T3 // global: N
var T4 // global: M
var 400040 T5 // global: x
var 12000000 T6 // global: y
var 12000000 T7 // global: v
var 400040 T8 // global: a
var 400040 T9 // global: b
var 400040 T10 // global: c

//--- GLOBAL INIT
T3 = 100010 // init: N
T4 = 3000000 // init: M

//--- FUNCTIONS
f_spmv [6]
var T0 // local: i
var T1 // local: j
var T2 // local: k
var t0
var t1
var t2
var t3
var t4
var t5
var t6
var t7
var t8
var t9
var t10
var t11
var t12
var t13
var t14
var t15
var t16
var t17
var t18
var t19
var t20
var t21
var t22
var t23
var t24
var t25
var t26
var t27
var t28
var t29
var t30
var t31
var t32
var t33
var t34
var t35
var t36
var t37
var t38
var t39
var t40
var t41
var t42
var t43
var t44
var t45
var t46
var t47
var t48
var t49
var t50
var t51
var t52
var t53
var t54
var t55
var t56
var t57
var t58
    T0 = 0
    l0: // stmt: while - ltest
    if T0 >= p0 goto l1 // stmt: while - done
    t1 = 4 * T0
    t2 = p5 + t1
    t2 [0] = 0
    T0 = T0 + 1
    goto l0 // stmt: while - to test
    l1: // stmt: while - ldone
    T0 = 0
    l2: // stmt: while - ltest
    if T0 >= p0 goto l3 // stmt: while - done
    t6 = 4 * T0
    t7 = p1 + t6
    t5 = t7 [0]
    T1 = t5
    l4: // stmt: while - ltest
    t11 = T0 + 1
    t10 = 4 * t11
    t12 = p1 + t10
    t9 = t12 [0]
    if T1 >= t9 goto l5 // stmt: while - done
    t17 = 4 * T1
    t18 = p2 + t17
    t16 = t18 [0]
    t15 = 4 * t16
    t19 = p5 + t15
    t14 = t19 [0]
    t21 = 4 * T1
    t22 = p3 + t21
    t20 = t22 [0]
    t13 = t14 + t20
    t25 = 4 * T1
    t26 = p2 + t25
    t24 = t26 [0]
    t23 = 4 * t24
    t27 = p5 + t23
    t27 [0] = t13
    T1 = T1 + 1
    goto l4 // stmt: while - to test
    l5: // stmt: while - ldone
    t30 = 4 * T0
    t31 = p1 + t30
    t29 = t31 [0]
    T1 = t29
    l6: // stmt: while - ltest
    t35 = T0 + 1
    t34 = 4 * t35
    t36 = p1 + t34
    t33 = t36 [0]
    if T1 >= t33 goto l7 // stmt: while - done
    t41 = 4 * T1
    t42 = p2 + t41
    t40 = t42 [0]
    t39 = 4 * t40
    t43 = p5 + t39
    t38 = t43 [0]
    t46 = 4 * T1
    t47 = p3 + t46
    t45 = t47 [0]
    t50 = 4 * T0
    t51 = p4 + t50
    t49 = t51 [0]
    t48 = t49 - 1
    t44 = t45 * t48
    t37 = t38 + t44
    t54 = 4 * T1
    t55 = p2 + t54
    t53 = t55 [0]
    t52 = 4 * t53
    t56 = p5 + t52
    t56 [0] = t37
    T1 = T1 + 1
    goto l6 // stmt: while - to test
    l7: // stmt: while - ldone
    T0 = T0 + 1
    goto l2 // stmt: while - to test
    l3: // stmt: while - ldone
    return // stmt: func epilog
end f_spmv

f_main [0]
var T11 // local: n
var t59
var t60
var t61
var T12 // local: m
var t62
var t63
var t64
var t65
var t66
var t67
var T13 // local: i
var t68
var t69
var t70
var t71
var t72
var t73
var t74
var t75
var t76
var t77
var t78
var t79
var t80
    t61 = T5 + 0 // stmt: param array access
    param t61 // #0
    t60 = call f_getarray
    T11 = t60 - 1
    t63 = T6 + 0 // stmt: param array access
    param t63 // #0
    T12 = call f_getarray
    t65 = T7 + 0 // stmt: param array access
    param t65 // #0
    t64 = call f_getarray
    t67 = T8 + 0 // stmt: param array access
    param t67 // #0
    t66 = call f_getarray
    param 39 // #0
    call f__sysy_starttime
    T13 = 0 // stmt: i
    l8: // stmt: while - ltest
    if T13 >= 100 goto l9 // stmt: while - done
    t69 = T5 + 0 // stmt: param array access
    t70 = T6 + 0 // stmt: param array access
    t71 = T7 + 0 // stmt: param array access
    t72 = T8 + 0 // stmt: param array access
    t73 = T9 + 0 // stmt: param array access
    param T11 // #0
    param t69 // #1
    param t70 // #2
    param t71 // #3
    param t72 // #4
    param t73 // #5
    call f_spmv
    t74 = T5 + 0 // stmt: param array access
    t75 = T6 + 0 // stmt: param array access
    t76 = T7 + 0 // stmt: param array access
    t77 = T9 + 0 // stmt: param array access
    t78 = T8 + 0 // stmt: param array access
    param T11 // #0
    param t74 // #1
    param t75 // #2
    param t76 // #3
    param t77 // #4
    param t78 // #5
    call f_spmv
    T13 = T13 + 1
    goto l8 // stmt: while - to test
    l9: // stmt: while - ldone
    param 47 // #0
    call f__sysy_stoptime
    t80 = T9 + 0 // stmt: param array access
    param T11 // #0
    param t80 // #1
    call f_putarray
    return 0
    return 0 // stmt: func epilog
end f_main

// END EEYORE
