// BEGIN EEYORE
//--- GLOBAL DECL
var T0 // global: N
var 4194304 T4 // global: A
var 4194304 T5 // global: B
var 4194304 T6 // global: C

//--- GLOBAL INIT
T0 = 1024 // init: N

//--- FUNCTIONS
f_mm [4]
var T1 // local: i
var T2 // local: j
var T3 // local: k
var t0
var t1
var t2
var t3
var t4
var t5
var t6
var t7
var t8
var t9
var t10
var t11
var t12
var t13
var t14
var t15
var t16
var t17
var t18
var t19
var t20
var t21
var t22
var t23
var t24
var t25
var t26
var t27
var t28
var t29
var t30
var t31
var t32
var t33
var t34
var t35
var t36
var t37
var t38
var t39
var t40
var t41
    T1 = 0
    T2 = 0
    l0: // stmt: while - ltest
    if T1 >= p0 goto l1 // stmt: while - done
    T2 = 0
    l2: // stmt: while - ltest
    if T2 >= p0 goto l3 // stmt: while - done
    t4 = 1024 * T1
    t3 = t4 + T2
    t2 = 4 * t3
    t5 = p3 + t2
    t5 [0] = 0
    T2 = T2 + 1
    goto l2 // stmt: while - to test
    l3: // stmt: while - ldone
    T1 = T1 + 1
    goto l0 // stmt: while - to test
    l1: // stmt: while - ldone
    T1 = 0
    T2 = 0
    T3 = 0
    l4: // stmt: while - ltest
    if T3 >= p0 goto l5 // stmt: while - done
    T1 = 0
    l6: // stmt: while - ltest
    if T1 >= p0 goto l7 // stmt: while - done
    t14 = 1024 * T1
    t13 = t14 + T3
    t12 = 4 * t13
    t15 = p1 + t12
    t11 = t15 [0]
    if t11 != 0 goto l8 // stmt: ifonly
    T1 = T1 + 1
    goto l6 // stmt: continue
    l8: // stmt: ifonly - lskip
    T2 = 0
    l9: // stmt: while - ltest
    if T2 >= p0 goto l10 // stmt: while - done
    t22 = 1024 * T1
    t21 = t22 + T2
    t20 = 4 * t21
    t23 = p3 + t20
    t19 = t23 [0]
    t28 = 1024 * T1
    t27 = t28 + T3
    t26 = 4 * t27
    t29 = p1 + t26
    t25 = t29 [0]
    t33 = 1024 * T3
    t32 = t33 + T2
    t31 = 4 * t32
    t34 = p2 + t31
    t30 = t34 [0]
    t24 = t25 * t30
    t18 = t19 + t24
    t37 = 1024 * T1
    t36 = t37 + T2
    t35 = 4 * t36
    t38 = p3 + t35
    t38 [0] = t18
    T2 = T2 + 1
    goto l9 // stmt: while - to test
    l10: // stmt: while - ldone
    T1 = T1 + 1
    goto l6 // stmt: while - to test
    l7: // stmt: while - ldone
    T3 = T3 + 1
    goto l4 // stmt: while - to test
    l5: // stmt: while - ldone
    return // stmt: func epilog
end f_mm

f_main [0]
var T7 // local: n
var t42
var T8 // local: i
var T9 // local: j
var t43
var t44
var t45
var t46
var t47
var t48
var t49
var t50
var t51
var t52
var t53
var t54
var t55
var t56
var t57
var t58
var t59
var t60
var t61
var t62
var t63
var t64
var t65
var t66
var t67
var t68
var T10 // local: ans
var t69
var t70
var t71
var t72
var t73
var t74
var t75
var t76
var t77
var t78
    T7 = call f_getint
    T8 = 0
    T9 = 0
    l11: // stmt: while - ltest
    if T8 >= T7 goto l12 // stmt: while - done
    T9 = 0
    l13: // stmt: while - ltest
    if T9 >= T7 goto l14 // stmt: while - done
    t45 = call f_getint
    t48 = 1024 * T8
    t47 = t48 + T9
    t46 = 4 * t47
    t49 = T4 + t46
    t49 [0] = t45
    T9 = T9 + 1
    goto l13 // stmt: while - to test
    l14: // stmt: while - ldone
    T8 = T8 + 1
    goto l11 // stmt: while - to test
    l12: // stmt: while - ldone
    T8 = 0
    T9 = 0
    l15: // stmt: while - ltest
    if T8 >= T7 goto l16 // stmt: while - done
    T9 = 0
    l17: // stmt: while - ltest
    if T9 >= T7 goto l18 // stmt: while - done
    t54 = call f_getint
    t57 = 1024 * T8
    t56 = t57 + T9
    t55 = 4 * t56
    t58 = T5 + t55
    t58 [0] = t54
    T9 = T9 + 1
    goto l17 // stmt: while - to test
    l18: // stmt: while - ldone
    T8 = T8 + 1
    goto l15 // stmt: while - to test
    l16: // stmt: while - ldone
    param 65 // #0
    call f__sysy_starttime
    T8 = 0
    l19: // stmt: while - ltest
    if T8 >= 5 goto l20 // stmt: while - done
    t62 = T4 + 0 // stmt: param array access
    t63 = T5 + 0 // stmt: param array access
    t64 = T6 + 0 // stmt: param array access
    param T7 // #0
    param t62 // #1
    param t63 // #2
    param t64 // #3
    call f_mm
    t65 = T4 + 0 // stmt: param array access
    t66 = T6 + 0 // stmt: param array access
    t67 = T5 + 0 // stmt: param array access
    param T7 // #0
    param t65 // #1
    param t66 // #2
    param t67 // #3
    call f_mm
    T8 = T8 + 1
    goto l19 // stmt: while - to test
    l20: // stmt: while - ldone
    T10 = 0 // stmt: ans
    T8 = 0
    l21: // stmt: while - ltest
    if T8 >= T7 goto l22 // stmt: while - done
    T9 = 0
    l23: // stmt: while - ltest
    if T9 >= T7 goto l24 // stmt: while - done
    t75 = 1024 * T8
    t74 = t75 + T9
    t73 = 4 * t74
    t76 = T5 + t73
    t72 = t76 [0]
    T10 = T10 + t72
    T9 = T9 + 1
    goto l23 // stmt: while - to test
    l24: // stmt: while - ldone
    T8 = T8 + 1
    goto l21 // stmt: while - to test
    l22: // stmt: while - ldone
    param 84 // #0
    call f__sysy_stoptime
    param T10 // #0
    call f_putint
    param 10 // #0
    call f_putch
    return 0
    return 0 // stmt: func epilog
end f_main

// END EEYORE
