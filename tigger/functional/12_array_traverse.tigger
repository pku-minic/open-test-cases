// BEGIN TIGGER
//--- SCALAR DECL

//--- ARRAY DECL
v0 = malloc 48

//--- FUNCTIONS
f_main [0] [0]
// DESTROYS: a3 s4 a1 a0 a2

//     {reg: s4}T1 = 0
    s4 = 0

//     {reg: a1}T2 = 0
    a1 = 0

//     l0:
    l0:

//     if {reg: s4}T1 > 5 goto l1
    t1 = 5
    if s4 > t1 goto l1

//     {reg: a3}T3 = {reg: s4}T1
    a3 = s4

//     l2:
    l2:

//     if {reg: a3}T3 < 0 goto l3
    if a3 < x0 goto l3

//     {reg: a2}t2 = 0
    a2 = 0

//     if {reg: a3}T3 >= 4 goto l4
    t1 = 4
    if a3 >= t1 goto l4

//     {reg: a0}t5 = {reg: s4}T1 - {reg: a3}T3
    a0 = s4 - a3

//     if {reg: a0}t5 >= 3 goto l4
    t1 = 3
    if a0 >= t1 goto l4

//     {reg: a2}t2 = 1
    a2 = 1

//     l4:
    l4:

//     if {reg: a2}t2 == 0 goto l5
    if a2 == x0 goto l5

//     {reg: a2}t9 = {reg: s4}T1 - {reg: a3}T3
    a2 = s4 - a3

//     {reg: a2}t8 = 4 * {reg: a2}t9
    a2 = a2 * 4 // shift left

//     {reg: a2}t7 = {reg: a2}t8 + {reg: a3}T3
    a2 = a2 + a3

//     {reg: a2}t6 = 4 * {reg: a2}t7
    a2 = a2 * 4 // shift left

//     {reg: a2}t10 = {global}T0 + {reg: a2}t6
    loadaddr v0 t0
    a2 = t0 + a2

//     {reg: a2}t10 [0] = {reg: a1}T2
    a2 [0] = a1

//     {reg: a1}T2 = 1
    a1 = 1

//     l5:
    l5:

//     {reg: a3}T3 = {reg: a3}T3 - 1
    a3 = a3 + -1

//     goto l2
    goto l2

//     l3:
    l3:

//     {reg: s4}T1 = {reg: s4}T1 + 1
    s4 = s4 + 1

//     goto l0
    goto l0

//     l1:
    l1:

//     return 0
    a0 = 0
    return
end f_main

// END TIGGER
