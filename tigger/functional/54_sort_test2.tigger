// BEGIN TIGGER
//--- SCALAR DECL
v0 = 0

//--- ARRAY DECL

//--- FUNCTIONS
f_insertsort [1] [0]
// DESTROYS: a3 a0 a1 s3 a2 a7 s4

//     {reg: a3}T1 = 1
    a3 = 1

//     l0:
    l0:

//     if {reg: a3}T1 >= {global}T0 goto l1
    load v0 t1
    if a3 >= t1 goto l1

//     {reg: s3}t2 = 4 * {reg: a3}T1
    s3 = a3 * 4 // shift left

//     {reg: s4}t3 = {reg: a0}p0 + {reg: s3}t2
    s4 = a0 + s3

//     {reg: s4}t1 = {reg: s4}t3 [0]
    s4 = s4 [0]

//     {reg: s4}T2 = {reg: s4}t1
    s4 = s4

//     {reg: a2}T3 = {reg: a3}T1 - 1
    a2 = a3 + -1

//     l2:
    l2:

//     {reg: a1}t5 = 0
    a1 = 0

//     if {reg: a2}T3 <= -1 goto l4
    t1 = -1
    if a2 <= t1 goto l4

//     {reg: a7}t9 = 4 * {reg: a2}T3
    a7 = a2 * 4 // shift left

//     {reg: a7}t10 = {reg: a0}p0 + {reg: a7}t9
    a7 = a0 + a7

//     {reg: a7}t8 = {reg: a7}t10 [0]
    a7 = a7 [0]

//     if {reg: s4}T2 >= {reg: a7}t8 goto l4
    if s4 >= a7 goto l4

//     {reg: a1}t5 = 1
    a1 = 1

//     l4:
    l4:

//     if {reg: a1}t5 == 0 goto l3
    if a1 == x0 goto l3

//     {reg: a1}t12 = 4 * {reg: a2}T3
    a1 = a2 * 4 // shift left

//     {reg: a1}t13 = {reg: a0}p0 + {reg: a1}t12
    a1 = a0 + a1

//     {reg: a1}t11 = {reg: a1}t13 [0]
    a1 = a1 [0]

//     {reg: a7}t15 = {reg: a2}T3 + 1
    a7 = a2 + 1

//     {reg: a7}t14 = 4 * {reg: a7}t15
    a7 = a7 * 4 // shift left

//     {reg: a7}t16 = {reg: a0}p0 + {reg: a7}t14
    a7 = a0 + a7

//     {reg: a7}t16 [0] = {reg: a1}t11
    a7 [0] = a1

//     {reg: a2}T3 = {reg: a2}T3 - 1
    a2 = a2 + -1

//     goto l2
    goto l2

//     l3:
    l3:

//     {reg: a2}t19 = {reg: a2}T3 + 1
    a2 = a2 + 1

//     {reg: a2}t18 = 4 * {reg: a2}t19
    a2 = a2 * 4 // shift left

//     {reg: a2}t20 = {reg: a0}p0 + {reg: a2}t18
    a2 = a0 + a2

//     {reg: a2}t20 [0] = {reg: s4}T2
    a2 [0] = s4

//     {reg: a3}T1 = {reg: a3}T1 + 1
    a3 = a3 + 1

//     goto l0
    goto l0

//     l1:
    l1:

//     return 0
    a0 = 0
    return
end f_insertsort

f_main [0] [11]
// DESTROYS: a5 t0 a6 t1 s3 a7 t2 t3 t4 t5 a4 a2 a1 a0 t6 a3 s4

//     {global}T0 = 10
    t0 = 10
    loadaddr v0 t1
    t1 [0] = t0

//     {stk #0 +10}T4 [0] = 4
    loadaddr 0 t1
    t0 = 4
    t1 [0] = t0

//     {stk #0 +10}T4 [4] = 3
    loadaddr 1 t1
    t0 = 3
    t1 [0] = t0

//     {stk #0 +10}T4 [8] = 9
    loadaddr 2 t1
    t0 = 9
    t1 [0] = t0

//     {stk #0 +10}T4 [12] = 2
    loadaddr 3 t1
    t0 = 2
    t1 [0] = t0

//     {stk #0 +10}T4 [16] = 0
    loadaddr 4 t1
    t1 [0] = x0

//     {stk #0 +10}T4 [20] = 1
    loadaddr 5 t1
    t0 = 1
    t1 [0] = t0

//     {stk #0 +10}T4 [24] = 6
    loadaddr 6 t1
    t0 = 6
    t1 [0] = t0

//     {stk #0 +10}T4 [28] = 5
    loadaddr 7 t1
    t0 = 5
    t1 [0] = t0

//     {stk #0 +10}T4 [32] = 7
    loadaddr 8 t1
    t0 = 7
    t1 [0] = t0

//     {stk #0 +10}T4 [36] = 8
    loadaddr 9 t1
    t0 = 8
    t1 [0] = t0

//     {reg: a0}t23 = {stk #0 +10}T4 + 0
    loadaddr 0 t0
    a0 = t0 + 0


//     param {reg: a0}t23 // #0
//     {reg: a0}T5 = call f_insertsort
    a0 = a0
    call f_insertsort
    a0 = a0

//     l5:
    l5:

//     if {reg: a0}T5 >= {global}T0 goto l6
    load v0 t1
    if a0 >= t1 goto l6

//     {reg: s4}t26 = 4 * {reg: a0}T5
    s4 = a0 * 4 // shift left

//     {reg: s4}t27 = {stk #0 +10}T4 + {reg: s4}t26
    loadaddr 0 t0
    s4 = t0 + s4

//     {reg: s4}t25 = {reg: s4}t27 [0]
    s4 = s4 [0]

//     {reg: s4}T6 = {reg: s4}t25
    s4 = s4


//     param {reg: s4}T6 // #0
//     call f_putint
    store a0 10
    a0 = s4
    call f_putint
    load 10 a0

//     {reg: s4}T6 = 10
    s4 = 10


//     param {reg: s4}T6 // #0
//     call f_putch
    store a0 10
    a0 = s4
    call f_putch
    load 10 a0

//     {reg: a0}T5 = {reg: a0}T5 + 1
    a0 = a0 + 1

//     goto l5
    goto l5

//     l6:
    l6:

//     return 0
    a0 = 0
    return
end f_main

// END TIGGER
