// BEGIN TIGGER
//--- SCALAR DECL
v0 = 0

//--- ARRAY DECL

//--- FUNCTIONS
f_Merge [4] [20]
// DESTROYS: t6 a0 t5 t3 t2 s4 a1 t4 a3 a2

//     {reg: s4}t1 = {reg: a2}p2 - {reg: a1}p1
    s4 = a2 - a1

//     {reg: t3}T1 = {reg: s4}t1 + 1
    t3 = s4 + 1

//     {reg: t4}T2 = {reg: a3}p3 - {reg: a2}p2
    t4 = a3 - a2

//     {reg: t6}T5 = 0
    t6 = 0

//     {reg: t5}T6 = 0
    t5 = 0

//     l0:
    l0:

//     if {reg: t6}T5 >= {reg: t3}T1 goto l1
    if t6 >= t3 goto l1

//     {reg: a3}t6 = {reg: t6}T5 + {reg: a1}p1
    a3 = t6 + a1

//     {reg: a3}t5 = 4 * {reg: a3}t6
    a3 = a3 * 4 // shift left

//     {reg: a3}t7 = {reg: a0}p0 + {reg: a3}t5
    a3 = a0 + a3

//     {reg: a3}t4 = {reg: a3}t7 [0]
    a3 = a3 [0]

//     {reg: t2}t8 = 4 * {reg: t6}T5
    t2 = t6 * 4 // shift left

//     {reg: s4}t9 = {stk #0 +10}T3 + {reg: t2}t8
    loadaddr 0 t0
    s4 = t0 + t2

//     {reg: s4}t9 [0] = {reg: a3}t4
    s4 [0] = a3

//     {reg: t6}T5 = {reg: t6}T5 + 1
    t6 = t6 + 1

//     goto l0
    goto l0

//     l1:
    l1:

//     l2:
    l2:

//     if {reg: t5}T6 >= {reg: t4}T2 goto l3
    if t5 >= t4 goto l3

//     {reg: a3}t15 = {reg: t5}T6 + {reg: a2}p2
    a3 = t5 + a2

//     {reg: a3}t14 = {reg: a3}t15 + 1
    a3 = a3 + 1

//     {reg: a3}t13 = 4 * {reg: a3}t14
    a3 = a3 * 4 // shift left

//     {reg: a3}t16 = {reg: a0}p0 + {reg: a3}t13
    a3 = a0 + a3

//     {reg: t2}t12 = {reg: a3}t16 [0]
    t2 = a3 [0]

//     {reg: a3}t17 = 4 * {reg: t5}T6
    a3 = t5 * 4 // shift left

//     {reg: a3}t18 = {stk #10 +10}T4 + {reg: a3}t17
    loadaddr 10 t0
    a3 = t0 + a3

//     {reg: a3}t18 [0] = {reg: t2}t12
    a3 [0] = t2

//     {reg: t5}T6 = {reg: t5}T6 + 1
    t5 = t5 + 1

//     goto l2
    goto l2

//     l3:
    l3:

//     {reg: t6}T5 = 0
    t6 = 0

//     {reg: t5}T6 = 0
    t5 = 0

//     {reg: t2}T7 = {reg: a1}p1
    t2 = a1

//     l4:
    l4:

//     {reg: a3}t20 = 0
    a3 = 0

//     if {reg: t6}T5 == {reg: t3}T1 goto l6
    if t6 == t3 goto l6

//     if {reg: t5}T6 == {reg: t4}T2 goto l6
    if t5 == t4 goto l6

//     {reg: a3}t20 = 1
    a3 = 1

//     l6:
    l6:

//     if {reg: a3}t20 == 0 goto l5
    if a3 == x0 goto l5

//     {reg: a3}t25 = 4 * {reg: t6}T5
    a3 = t6 * 4 // shift left

//     {reg: a3}t26 = {stk #0 +10}T3 + {reg: a3}t25
    loadaddr 0 t0
    a3 = t0 + a3

//     {reg: a3}t24 = {reg: a3}t26 [0]
    a3 = a3 [0]

//     {reg: a2}t29 = 4 * {reg: t5}T6
    a2 = t5 * 4 // shift left

//     {reg: a2}t30 = {stk #10 +10}T4 + {reg: a2}t29
    loadaddr 10 t0
    a2 = t0 + a2

//     {reg: a2}t28 = {reg: a2}t30 [0]
    a2 = a2 [0]

//     {reg: a2}t27 = {reg: a2}t28 + 1
    a2 = a2 + 1

//     if {reg: a3}t24 >= {reg: a2}t27 goto l7
    if a3 >= a2 goto l7

//     {reg: a3}t32 = 4 * {reg: t6}T5
    a3 = t6 * 4 // shift left

//     {reg: a3}t33 = {stk #0 +10}T3 + {reg: a3}t32
    loadaddr 0 t0
    a3 = t0 + a3

//     {reg: a3}t31 = {reg: a3}t33 [0]
    a3 = a3 [0]

//     {reg: a2}t34 = 4 * {reg: t2}T7
    a2 = t2 * 4 // shift left

//     {reg: a2}t35 = {reg: a0}p0 + {reg: a2}t34
    a2 = a0 + a2

//     {reg: a2}t35 [0] = {reg: a3}t31
    a2 [0] = a3

//     {reg: t2}T7 = {reg: t2}T7 + 1
    t2 = t2 + 1

//     {reg: t6}T5 = {reg: t6}T5 + 1
    t6 = t6 + 1

//     goto l8
    goto l8

//     l7:
    l7:

//     {reg: a3}t39 = 4 * {reg: t5}T6
    a3 = t5 * 4 // shift left

//     {reg: a3}t40 = {stk #10 +10}T4 + {reg: a3}t39
    loadaddr 10 t0
    a3 = t0 + a3

//     {reg: a3}t38 = {reg: a3}t40 [0]
    a3 = a3 [0]

//     {reg: a2}t41 = 4 * {reg: t2}T7
    a2 = t2 * 4 // shift left

//     {reg: a2}t42 = {reg: a0}p0 + {reg: a2}t41
    a2 = a0 + a2

//     {reg: a2}t42 [0] = {reg: a3}t38
    a2 [0] = a3

//     {reg: t2}T7 = {reg: t2}T7 + 1
    t2 = t2 + 1

//     {reg: t5}T6 = {reg: t5}T6 + 1
    t5 = t5 + 1

//     l8:
    l8:

//     goto l4
    goto l4

//     l5:
    l5:

//     l9:
    l9:

//     if {reg: t6}T5 >= {reg: t3}T1 goto l10
    if t6 >= t3 goto l10

//     {reg: a3}t47 = 4 * {reg: t6}T5
    a3 = t6 * 4 // shift left

//     {reg: a3}t48 = {stk #0 +10}T3 + {reg: a3}t47
    loadaddr 0 t0
    a3 = t0 + a3

//     {reg: a3}t46 = {reg: a3}t48 [0]
    a3 = a3 [0]

//     {reg: a2}t49 = 4 * {reg: t2}T7
    a2 = t2 * 4 // shift left

//     {reg: a2}t50 = {reg: a0}p0 + {reg: a2}t49
    a2 = a0 + a2

//     {reg: a2}t50 [0] = {reg: a3}t46
    a2 [0] = a3

//     {reg: t2}T7 = {reg: t2}T7 + 1
    t2 = t2 + 1

//     {reg: t6}T5 = {reg: t6}T5 + 1
    t6 = t6 + 1

//     goto l9
    goto l9

//     l10:
    l10:

//     l11:
    l11:

//     if {reg: t5}T6 >= {reg: t4}T2 goto l12
    if t5 >= t4 goto l12

//     {reg: s4}t55 = 4 * {reg: t5}T6
    s4 = t5 * 4 // shift left

//     {reg: s4}t56 = {stk #10 +10}T4 + {reg: s4}t55
    loadaddr 10 t0
    s4 = t0 + s4

//     {reg: t3}t54 = {reg: s4}t56 [0]
    t3 = s4 [0]

//     {reg: a3}t57 = 4 * {reg: t2}T7
    a3 = t2 * 4 // shift left

//     {reg: a3}t58 = {reg: a0}p0 + {reg: a3}t57
    a3 = a0 + a3

//     {reg: a3}t58 [0] = {reg: t3}t54
    a3 [0] = t3

//     {reg: t2}T7 = {reg: t2}T7 + 1
    t2 = t2 + 1

//     {reg: t5}T6 = {reg: t5}T6 + 1
    t5 = t5 + 1

//     goto l11
    goto l11

//     l12:
    l12:

//     return 0
    a0 = 0
    return
end f_Merge

f_MergeSort [3] [6]
// DESTROYS: t4 t2 s4 t3 a1 t6 a0 a3 a2 t5

//     if {reg: a1}p1 >= {reg: a2}p2 goto l13
    if a1 >= a2 goto l13

//     {reg: a3}t63 = {reg: a1}p1 + {reg: a2}p2
    a3 = a1 + a2

//     {reg: t6}T8 = {reg: a3}t63 / 2
    t6 = a3 / 2 // shift right

//     {reg: a3}t65 = {reg: a0}p0 + 0
    a3 = a0 + 0




//     param {reg: a3}t65 // #0
//     param {reg: a1}p1 // #1
//     param {reg: t6}T8 // #2
//     {reg: t5}T9 = call f_MergeSort
    store a2 0
    store a1 1
    store a0 2
    store t6 3
    a0 = a3
    a1 = a1
    a2 = t6
    call f_MergeSort
    load 0 a2
    load 1 a1
    load 2 a0
    load 3 t6

//     {reg: t5}T9 = {reg: t6}T8 + 1
    t5 = t6 + 1

//     {reg: a3}t68 = {reg: a0}p0 + 0
    a3 = a0 + 0




//     param {reg: a3}t68 // #0
//     param {reg: t5}T9 // #1
//     param {reg: a2}p2 // #2
//     {reg: t5}T9 = call f_MergeSort
    store a1 0
    store a2 1
    store t6 2
    store a0 3
    a0 = a3
    a1 = t5
    a2 = a2
    call f_MergeSort
    load 0 a1
    load 1 a2
    load 2 t6
    load 3 a0

//     {reg: a0}t70 = {reg: a0}p0 + 0
    //a0 = a0 + 0





//     param {reg: a0}t70 // #0
//     param {reg: a1}p1 // #1
//     param {reg: t6}T8 // #2
//     param {reg: a2}p2 // #3
//     {reg: t5}T9 = call f_Merge
    store a2 0
    a0 = a0
    a1 = a1
    a2 = t6
    load 0 a3
    call f_Merge

//     l13:
    l13:

//     return 0
    a0 = 0
    return
end f_MergeSort

f_main [0] [13]
// DESTROYS: a4 a5 t0 a6 t1 t5 a3 t3 t4 a1 a0 t6 a7 t2 s4 a2

//     {global}T0 = 10
    t0 = 10
    loadaddr v0 t1
    t1 [0] = t0

//     {stk #0 +10}T10 [0] = 4
    loadaddr 0 t1
    t0 = 4
    t1 [0] = t0

//     {stk #0 +10}T10 [4] = 3
    loadaddr 1 t1
    t0 = 3
    t1 [0] = t0

//     {stk #0 +10}T10 [8] = 9
    loadaddr 2 t1
    t0 = 9
    t1 [0] = t0

//     {stk #0 +10}T10 [12] = 2
    loadaddr 3 t1
    t0 = 2
    t1 [0] = t0

//     {stk #0 +10}T10 [16] = 0
    loadaddr 4 t1
    t1 [0] = x0

//     {stk #0 +10}T10 [20] = 1
    loadaddr 5 t1
    t0 = 1
    t1 [0] = t0

//     {stk #0 +10}T10 [24] = 6
    loadaddr 6 t1
    t0 = 6
    t1 [0] = t0

//     {stk #0 +10}T10 [28] = 5
    loadaddr 7 t1
    t0 = 5
    t1 [0] = t0

//     {stk #0 +10}T10 [32] = 7
    loadaddr 8 t1
    t0 = 7
    t1 [0] = t0

//     {stk #0 +10}T10 [36] = 8
    loadaddr 9 t1
    t0 = 8
    t1 [0] = t0

//     {reg: a1}T11 = 0
    a1 = 0

//     {reg: a2}T12 = {global}T0 - 1
    load v0 t0
    a2 = t0 + -1

//     {reg: a0}t73 = {stk #0 +10}T10 + 0
    loadaddr 0 t0
    a0 = t0 + 0




//     param {reg: a0}t73 // #0
//     param {reg: a1}T11 // #1
//     param {reg: a2}T12 // #2
//     {reg: a1}T11 = call f_MergeSort
    a0 = a0
    a1 = a1
    a2 = a2
    call f_MergeSort
    a1 = a0

//     l14:
    l14:

//     if {reg: a1}T11 >= {global}T0 goto l15
    load v0 t1
    if a1 >= t1 goto l15

//     {reg: s4}t76 = 4 * {reg: a1}T11
    s4 = a1 * 4 // shift left

//     {reg: s4}t77 = {stk #0 +10}T10 + {reg: s4}t76
    loadaddr 0 t0
    s4 = t0 + s4

//     {reg: a2}t75 = {reg: s4}t77 [0]
    a2 = s4 [0]

//     {reg: a2}T12 = {reg: a2}t75
    a2 = a2


//     param {reg: a2}T12 // #0
//     call f_putint
    store a1 10
    a0 = a2
    call f_putint
    load 10 a1

//     {reg: a2}T12 = 10
    a2 = 10


//     param {reg: a2}T12 // #0
//     call f_putch
    store a1 10
    a0 = a2
    call f_putch
    load 10 a1

//     {reg: a1}T11 = {reg: a1}T11 + 1
    a1 = a1 + 1

//     goto l14
    goto l14

//     l15:
    l15:

//     return 0
    a0 = 0
    return
end f_main

// END TIGGER
