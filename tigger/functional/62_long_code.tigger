v0 = 0
f_bubblesort [1] [25]
    load 1 t0
    t0 = 0
    store t0 1
    store a0 0
l0:
    load 3 t0
    load v0 t1
    t0 = t1 + -1
    load 4 t2
    load 1 t3
    t2 = t3 < t0
    store t2 4
    if t2 == x0 goto l4
    load 2 t0
    t0 = 0
    store t0 2
l1:
    load 5 t0
    load v0 t1
    load 1 t2
    t0 = t1 - t2
    load 6 t3
    t3 = t0 + -1
    load 7 t4
    load 2 t5
    t4 = t5 < t3
    store t4 7
    if t4 == x0 goto l3
    load 8 t0
    load 2 t1
    t2 = 4
    t0 = t1 * t2
    load 9 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 10 t6
    t6 = t1 + 1
    load 11 s1
    s2 = 4
    s1 = t6 * s2
    load 12 s3
    s4 = t4 + s1
    s3 = s4 [0]
    load 13 s5
    s5 = t3 > s3
    store s5 13
    if s5 == x0 goto l2
    load 15 t0
    load 2 t1
    t0 = t1 + 1
    load 16 t2
    t3 = 4
    t2 = t0 * t3
    load 17 t4
    load 0 t5
    t6 = t5 + t2
    t4 = t6 [0]
    load 14 s1
    s1 = t4
    load 18 s2
    s2 = t1 + 1
    load 19 s3
    s4 = 4
    s3 = s2 * s4
    load 20 s5
    s6 = 4
    s5 = t1 * s6
    load 21 s7
    s8 = t5 + s5
    s7 = s8 [0]
    s9 = t5 + s3
    s9 [0] = s7
    load 22 s10
    s11 = 4
    s10 = t1 * s11
    a0 = t5 + s10
    a0 [0] = s1
    store s1 14
    store s10 22
l2:
    load 23 t0
    load 2 t1
    t0 = t1 + 1
    t1 = t0
    store t1 2
    goto l1
l3:
    load 24 t0
    load 1 t1
    t0 = t1 + 1
    t1 = t0
    store t1 1
    goto l0
l4:
    a0 = 0
    return
end f_bubblesort
f_insertsort [1] [21]
    load 1 t0
    t0 = 1
    store t0 1
    store a0 0
l5:
    load 2 t0
    load 1 t1
    load v0 t2
    t0 = t1 < t2
    store t0 2
    if t0 == x0 goto l10
    load 4 t0
    load 1 t1
    t2 = 4
    t0 = t1 * t2
    load 5 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 3 t6
    t6 = t3
    load 7 s1
    s1 = t1 + -1
    load 6 s2
    s2 = s1
    store s1 7
    store s2 6
    store t6 3
l6:
    load 8 t0
    load 6 t1
    t2 = -1
    t0 = t1 > t2
    store t0 8
    if t0 == x0 goto l7
    load 10 t0
    load 6 t1
    t2 = 4
    t0 = t1 * t2
    load 11 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 12 t6
    load 3 s1
    t6 = s1 < t3
    store t6 12
    if t6 == x0 goto l7
    load 9 t0
    t0 = 1
    store t0 9
    goto l8
l7:
    load 9 t0
    t0 = 0
    store t0 9
l8:
    load 9 t0
    if t0 == x0 goto l9
    load 13 t0
    load 6 t1
    t0 = t1 + 1
    load 14 t2
    t3 = 4
    t2 = t0 * t3
    load 15 t4
    t5 = 4
    t4 = t1 * t5
    load 16 t6
    load 0 s1
    s2 = s1 + t4
    t6 = s2 [0]
    s3 = s1 + t2
    s3 [0] = t6
    load 17 s4
    s4 = t1 + -1
    t1 = s4
    store t1 6
    goto l6
l9:
    load 18 t0
    load 6 t1
    t0 = t1 + 1
    load 19 t2
    t3 = 4
    t2 = t0 * t3
    load 0 t4
    load 3 t5
    t6 = t4 + t2
    t6 [0] = t5
    load 20 s1
    load 1 s2
    s1 = s2 + 1
    s2 = s1
    store s2 1
    goto l5
l10:
    a0 = 0
    return
end f_insertsort
f_QuickSort [3] [47]
    load 3 t0
    t0 = a1 < a2
    store t0 3
    store a0 0
    store a1 1
    store a2 2
    if t0 == x0 goto l23
    load 4 t0
    load 1 t1
    t0 = t1
    load 5 t2
    load 2 t3
    t2 = t3
    load 7 t4
    t5 = 4
    t4 = t1 * t5
    load 8 t6
    load 0 s1
    s2 = s1 + t4
    t6 = s2 [0]
    load 6 s3
    s3 = t6
    store s3 6
    store t0 4
    store t2 5
    store t6 8
l11:
    load 9 t0
    load 4 t1
    load 5 t2
    t0 = t1 < t2
    store t0 9
    if t0 == x0 goto l22
l12:
    load 10 t0
    load 4 t1
    load 5 t2
    t0 = t1 < t2
    store t0 10
    if t0 == x0 goto l13
    load 12 t0
    load 5 t1
    t2 = 4
    t0 = t1 * t2
    load 13 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 14 t6
    load 6 s1
    t6 = s1 + -1
    load 15 s2
    s2 = t3 > t6
    store s2 15
    if s2 == x0 goto l13
    load 11 t0
    t0 = 1
    store t0 11
    goto l14
l13:
    load 11 t0
    t0 = 0
    store t0 11
l14:
    load 11 t0
    if t0 == x0 goto l15
    load 16 t0
    load 5 t1
    t0 = t1 + -1
    t1 = t0
    store t1 5
    goto l12
l15:
    load 17 t0
    load 4 t1
    load 5 t2
    t0 = t1 < t2
    store t0 17
    if t0 == x0 goto l16
    load 18 t0
    load 4 t1
    t2 = 4
    t0 = t1 * t2
    load 19 t3
    load 5 t4
    t5 = 4
    t3 = t4 * t5
    load 20 t6
    load 0 s1
    s2 = s1 + t3
    t6 = s2 [0]
    s3 = s1 + t0
    s3 [0] = t6
    load 21 s4
    s4 = t1 + 1
    t1 = s4
    store s4 21
    store t1 4
    store t1 4
l16:
l17:
    load 22 t0
    load 4 t1
    load 5 t2
    t0 = t1 < t2
    store t0 22
    if t0 == x0 goto l18
    load 24 t0
    load 4 t1
    t2 = 4
    t0 = t1 * t2
    load 25 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 26 t6
    load 6 s1
    t6 = t3 < s1
    store t6 26
    if t6 == x0 goto l18
    load 23 t0
    t0 = 1
    store t0 23
    goto l19
l18:
    load 23 t0
    t0 = 0
    store t0 23
l19:
    load 23 t0
    if t0 == x0 goto l20
    load 27 t0
    load 4 t1
    t0 = t1 + 1
    t1 = t0
    store t1 4
    goto l17
l20:
    load 28 t0
    load 4 t1
    load 5 t2
    t0 = t1 < t2
    store t0 28
    if t0 == x0 goto l21
    load 29 t0
    load 5 t1
    t2 = 4
    t0 = t1 * t2
    load 30 t3
    load 4 t4
    t5 = 4
    t3 = t4 * t5
    load 31 t6
    load 0 s1
    s2 = s1 + t3
    t6 = s2 [0]
    s3 = s1 + t0
    s3 [0] = t6
    load 32 s4
    s4 = t1 + -1
    t1 = s4
    store s4 32
    store t1 5
l21:
    goto l11
l22:
    load 33 t0
    load 4 t1
    t2 = 4
    t0 = t1 * t2
    load 0 t3
    load 6 t4
    t5 = t3 + t0
    t5 [0] = t4
    load 35 t6
    t6 = t1 + -1
    load 34 s1
    s1 = t6
    load 36 s2
    s2 = t3 + 0
    load 37 s3
    s3 = s2
    load 38 s4
    load 1 s5
    s4 = s5
    load 39 s6
    s6 = s1
    a0 = s3
    a1 = s4
    a2 = s6
    store s1 34
    call f_QuickSort
    load 34 t0
    t0 = a0
    load 41 t1
    load 4 t3
    t1 = t3 + 1
    t0 = t1
    load 42 t4
    load 0 t6
    t4 = t6 + 0
    load 43 s1
    s1 = t4
    load 44 s2
    s2 = t0
    load 45 s3
    load 2 s4
    s3 = s4
    a0 = s1
    a1 = s2
    a2 = s3
    call f_QuickSort
    t0 = a0
    store a0 46
l23:
    a0 = 0
    return
end f_QuickSort
f_getMid [1] [15]
    load 2 t0
    load v0 t1
    t2 = 2
    t0 = t1 % t2
    load 3 t3
    t3 = t0 == x0
    store t3 3
    store a0 0
    if t3 == x0 goto l24
    load 4 t0
    load v0 t1
    t2 = 2
    t0 = t1 / t2
    load 1 t3
    t3 = t0
    load 5 t4
    t5 = 4
    t4 = t3 * t5
    load 6 t6
    load 0 s1
    s2 = s1 + t4
    t6 = s2 [0]
    load 7 s3
    s3 = t3 + -1
    load 8 s4
    s5 = 4
    s4 = s3 * s5
    load 9 s6
    s7 = s1 + s4
    s6 = s7 [0]
    load 10 s8
    s8 = t6 + s6
    load 11 s9
    s10 = 2
    s9 = s8 / s10
    a0 = s9
    store s9 11
    store t3 1
    return
    goto l25
l24:
    load 12 t0
    load v0 t1
    t2 = 2
    t0 = t1 / t2
    load 1 t3
    t3 = t0
    load 13 t4
    t5 = 4
    t4 = t3 * t5
    load 14 t6
    load 0 s1
    s2 = s1 + t4
    t6 = s2 [0]
    a0 = t6
    store t6 14
    return
l25:
    a0 = 0
    return
end f_getMid
f_getMost [1] [1021]
    load 1001 t0
    t0 = 0
    store t0 1001
    store a0 0
l26:
    load 1002 t0
    load 1001 t1
    t0 = t1 < 1000
    store t0 1002
    if t0 == x0 goto l27
    load 1003 t0
    load 1001 t1
    t2 = 4
    t0 = t1 * t2
    loadaddr 1 t3
    t4 = t3 + t0
    t4 [0] = x0
    load 1004 t5
    t5 = t1 + 1
    t1 = t5
    store t1 1001
    goto l26
l27:
    load 1001 t0
    t0 = 0
    load 1005 t1
    t1 = 0
    store t0 1001
    store t1 1005
l28:
    load 1007 t0
    load 1001 t1
    load v0 t2
    t0 = t1 < t2
    store t0 1007
    if t0 == x0 goto l30
    load 1009 t0
    load 1001 t1
    t2 = 4
    t0 = t1 * t2
    load 1010 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 1008 t6
    t6 = t3
    load 1011 s1
    s2 = 4
    s1 = t6 * s2
    load 1012 s3
    s4 = 4
    s3 = t6 * s4
    load 1013 s5
    loadaddr 1 s6
    s7 = s6 + s3
    s5 = s7 [0]
    load 1014 s8
    s8 = s5 + 1
    s9 = s6 + s1
    s9 [0] = s8
    load 1015 s10
    s11 = 4
    s10 = t6 * s11
    load 1016 a0
    a1 = s6 + s10
    a0 = a1 [0]
    load 1017 a2
    load 1005 a3
    a2 = a0 > a3
    store t6 1008
    store a2 1017
    if a2 == x0 goto l29
    load 1018 t0
    load 1008 t1
    t2 = 4
    t0 = t1 * t2
    load 1019 t3
    loadaddr 1 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 1005 t6
    t6 = t3
    load 1006 s1
    s1 = t1
    store s1 1006
    store t6 1005
l29:
    load 1020 t0
    load 1001 t1
    t0 = t1 + 1
    t1 = t0
    store t1 1001
    goto l28
l30:
    load 1006 a0
    return
end f_getMost
f_revert [1] [13]
    load 2 t0
    t0 = 0
    load 3 t1
    t1 = 0
    store t0 2
    store t1 3
    store a0 0
l31:
    load 4 t0
    load 2 t1
    load 3 t2
    t0 = t1 < t2
    store t0 4
    if t0 == x0 goto l32
    load 5 t0
    load 2 t1
    t2 = 4
    t0 = t1 * t2
    load 6 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 1 t6
    t6 = t3
    load 7 s1
    s2 = 4
    s1 = t1 * s2
    load 8 s3
    load 3 s4
    s5 = 4
    s3 = s4 * s5
    load 9 s6
    s7 = t4 + s3
    s6 = s7 [0]
    s8 = t4 + s1
    s8 [0] = s6
    load 10 s9
    s10 = 4
    s9 = s4 * s10
    s11 = t4 + s9
    s11 [0] = t6
    load 11 a0
    a0 = t1 + 1
    t1 = a0
    load 12 a1
    a1 = s4 + -1
    s4 = a1
    store s4 3
    store t1 2
    goto l31
l32:
    a0 = 0
    return
end f_revert
f_arrCopy [2] [8]
    load 2 t0
    t0 = 0
    store t0 2
    store a0 0
    store a1 1
l33:
    load 3 t0
    load 2 t1
    load v0 t2
    t0 = t1 < t2
    store t0 3
    if t0 == x0 goto l34
    load 4 t0
    load 2 t1
    t2 = 4
    t0 = t1 * t2
    load 5 t3
    t4 = 4
    t3 = t1 * t4
    load 6 t5
    load 0 t6
    s1 = t6 + t3
    t5 = s1 [0]
    load 1 s2
    s3 = s2 + t0
    s3 [0] = t5
    load 7 s4
    s4 = t1 + 1
    t1 = s4
    store t1 2
    goto l33
l34:
    a0 = 0
    return
end f_arrCopy
f_calSum [2] [14]
    load 2 t0
    t0 = 0
    load 3 t1
    t1 = 0
    store t0 2
    store t1 3
    store a0 0
    store a1 1
l35:
    load 4 t0
    load 3 t1
    load v0 t2
    t0 = t1 < t2
    store t0 4
    if t0 == x0 goto l38
    load 5 t0
    load 3 t1
    t2 = 4
    t0 = t1 * t2
    load 6 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 7 t6
    load 2 s1
    t6 = s1 + t3
    s1 = t6
    load 8 s2
    load 1 s3
    s2 = t1 % s3
    load 9 s4
    s4 = s3 + -1
    load 10 s5
    s5 = s2 != s4
    store s1 2
    store s5 10
    if s5 == x0 goto l36
    load 11 t0
    load 3 t1
    t2 = 4
    t0 = t1 * t2
    load 0 t3
    t4 = t3 + t0
    t4 [0] = x0
    goto l37
l36:
    load 12 t0
    load 3 t1
    t2 = 4
    t0 = t1 * t2
    load 0 t3
    load 2 t4
    t5 = t3 + t0
    t5 [0] = t4
    t4 = 0
    store t4 2
l37:
    load 13 t0
    load 3 t1
    t0 = t1 + 1
    t1 = t0
    store t1 3
    goto l35
l38:
    a0 = 0
    return
end f_calSum
f_avgPooling [2] [33]
    load 3 t0
    t0 = 0
    load 2 t1
    t1 = 0
    store t0 3
    store t1 2
    store a0 0
    store a1 1
l39:
    load 5 t0
    load 3 t1
    load v0 t2
    t0 = t1 < t2
    store t0 5
    if t0 == x0 goto l44
    load 6 t0
    load 1 t1
    t0 = t1 + -1
    load 7 t2
    load 3 t3
    t2 = t3 < t0
    store t2 7
    if t2 == x0 goto l40
    load 8 t0
    load 3 t1
    t2 = 4
    t0 = t1 * t2
    load 9 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 10 t6
    load 2 s1
    t6 = s1 + t3
    s1 = t6
    store s1 2
    goto l43
l40:
    load 11 t0
    load 1 t1
    t0 = t1 + -1
    load 12 t2
    load 3 t3
    t2 = t3 == t0
    store t2 12
    if t2 == x0 goto l41
    load 13 t0
    load 0 t1
    t0 = t1 [0]
    load 4 t2
    t2 = t0
    load 14 t3
    load 2 t4
    load 1 t5
    t3 = t4 / t5
    t1 [0] = t3
    store t2 4
    goto l42
l41:
    load 15 t0
    load 3 t1
    t2 = 4
    t0 = t1 * t2
    load 16 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 17 t6
    load 2 s1
    t6 = s1 + t3
    load 18 s2
    load 4 s3
    s2 = t6 - s3
    s1 = s2
    load 19 s4
    load 1 s5
    s4 = t1 - s5
    load 20 s6
    s6 = s4 + 1
    load 21 s7
    s8 = 4
    s7 = s6 * s8
    load 22 s9
    s10 = t4 + s7
    s9 = s10 [0]
    s3 = s9
    load 23 s11
    s11 = t1 - s5
    load 24 a0
    a0 = s11 + 1
    load 25 a1
    a2 = 4
    a1 = a0 * a2
    load 26 a3
    a3 = s1 / s5
    a4 = t4 + a1
    a4 [0] = a3
    store s1 2
    store s3 4
    store a1 25
    store a3 26
    store s1 2
    store s3 4
l42:
l43:
    load 27 t0
    load 3 t1
    t0 = t1 + 1
    t1 = t0
    store t1 3
    goto l39
l44:
    load 28 t0
    load v0 t1
    load 1 t2
    t0 = t1 - t2
    load 29 t3
    t3 = t0 + 1
    load 3 t4
    t4 = t3
    store t3 29
    store t4 3
l45:
    load 30 t0
    load 3 t1
    load v0 t2
    t0 = t1 < t2
    store t0 30
    if t0 == x0 goto l46
    load 31 t0
    load 3 t1
    t2 = 4
    t0 = t1 * t2
    load 0 t3
    t4 = t3 + t0
    t4 [0] = x0
    load 32 t5
    t5 = t1 + 1
    t1 = t5
    store t1 3
    goto l45
l46:
    a0 = 0
    return
end f_avgPooling
f_main [0] [162]
    load v0 t0
    t0 = 32
    loadaddr 0 t1
    t2 = 7
    t1 [0] = t2
    t3 = 23
    t1 [4] = t3
    t4 = 89
    t1 [8] = t4
    t5 = 26
    t1 [12] = t5
    t6 = 282
    t1 [16] = t6
    s1 = 254
    t1 [20] = s1
    s2 = 27
    t1 [24] = s2
    s3 = 5
    t1 [28] = s3
    s4 = 83
    t1 [32] = s4
    s5 = 273
    t1 [36] = s5
    s6 = 574
    t1 [40] = s6
    s7 = 905
    t1 [44] = s7
    s8 = 354
    t1 [48] = s8
    s9 = 657
    t1 [52] = s9
    s10 = 935
    t1 [56] = s10
    s11 = 264
    t1 [60] = s11
    a0 = 639
    t1 [64] = a0
    a1 = 459
    t1 [68] = a1
    a2 = 29
    t1 [72] = a2
    a3 = 68
    t1 [76] = a3
    a4 = 929
    t1 [80] = a4
    a5 = 756
    t1 [84] = a5
    a6 = 452
    t1 [88] = a6
    a7 = 279
    t1 [92] = a7
    loadaddr v0 s0
    s0 [0] = t0
    t0 = 58
    t1 [96] = t0
    t0 = 87
    t1 [100] = t0
    t0 = 96
    t1 [104] = t0
    t0 = 36
    t1 [108] = t0
    t0 = 39
    t1 [112] = t0
    t0 = 28
    t1 [116] = t0
    t0 = 1
    t1 [120] = t0
    t0 = 290
    t1 [124] = t0
    load 65 t0
    t0 = t1 + 0
    load 66 t2
    t2 = t0
    load 67 t0
    loadaddr 32 t3
    t0 = t3 + 0
    load 68 t4
    t4 = t0
    a0 = t2
    a1 = t4
    call f_arrCopy
    load 64 t0
    t0 = a0
    load 70 t1
    loadaddr 32 t2
    t1 = t2 + 0
    load 71 t3
    t3 = t1
    a0 = t3
    store t0 64
    call f_revert
    load 64 t0
    t0 = a0
    load 73 t1
    t1 = 0
    store t0 64
    store t1 73
l47:
    load 74 t0
    load 73 t1
    t0 = t1 < 32
    store t0 74
    if t0 == x0 goto l48
    load 75 t0
    load 73 t1
    t2 = 4
    t0 = t1 * t2
    load 76 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 64 t6
    t6 = t3
    load 77 s1
    s1 = t6
    a0 = s1
    store t6 64
    call f_putint
    load 78 t0
    load 73 t1
    t0 = t1 + 1
    t1 = t0
    store t1 73
    goto l47
l48:
    load 79 t0
    loadaddr 32 t1
    t0 = t1 + 0
    load 80 t2
    t2 = t0
    a0 = t2
    call f_bubblesort
    load 64 t0
    t0 = a0
    load 73 t1
    t1 = 0
    store t0 64
    store t1 73
l49:
    load 82 t0
    load 73 t1
    t0 = t1 < 32
    store t0 82
    if t0 == x0 goto l50
    load 83 t0
    load 73 t1
    t2 = 4
    t0 = t1 * t2
    load 84 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 64 t6
    t6 = t3
    load 85 s1
    s1 = t6
    a0 = s1
    store t6 64
    call f_putint
    load 86 t0
    load 73 t1
    t0 = t1 + 1
    t1 = t0
    store t1 73
    goto l49
l50:
    load 87 t0
    loadaddr 32 t1
    t0 = t1 + 0
    load 88 t2
    t2 = t0
    a0 = t2
    call f_getMid
    load 64 t0
    t0 = a0
    load 90 t1
    t1 = t0
    a0 = t1
    store t0 64
    call f_putint
    load 91 t0
    loadaddr 32 t1
    t0 = t1 + 0
    load 92 t2
    t2 = t0
    a0 = t2
    call f_getMost
    load 64 t0
    t0 = a0
    load 94 t1
    t1 = t0
    a0 = t1
    store t0 64
    call f_putint
    load 95 t0
    loadaddr 0 t1
    t0 = t1 + 0
    load 96 t2
    t2 = t0
    load 97 t3
    loadaddr 32 t4
    t3 = t4 + 0
    load 98 t5
    t5 = t3
    a0 = t2
    a1 = t5
    call f_arrCopy
    load 64 t0
    t0 = a0
    load 100 t1
    loadaddr 32 t2
    t1 = t2 + 0
    load 101 t3
    t3 = t1
    a0 = t3
    store t0 64
    call f_bubblesort
    load 64 t0
    t0 = a0
    load 73 t1
    t1 = 0
    store t0 64
    store t1 73
l51:
    load 103 t0
    load 73 t1
    t0 = t1 < 32
    store t0 103
    if t0 == x0 goto l52
    load 104 t0
    load 73 t1
    t2 = 4
    t0 = t1 * t2
    load 105 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 64 t6
    t6 = t3
    load 106 s1
    s1 = t6
    a0 = s1
    store t6 64
    call f_putint
    load 107 t0
    load 73 t1
    t0 = t1 + 1
    t1 = t0
    store t1 73
    goto l51
l52:
    load 108 t0
    loadaddr 0 t1
    t0 = t1 + 0
    load 109 t2
    t2 = t0
    load 110 t3
    loadaddr 32 t4
    t3 = t4 + 0
    load 111 t5
    t5 = t3
    a0 = t2
    a1 = t5
    call f_arrCopy
    load 64 t0
    t0 = a0
    load 113 t1
    loadaddr 32 t2
    t1 = t2 + 0
    load 114 t3
    t3 = t1
    a0 = t3
    store t0 64
    call f_insertsort
    load 64 t0
    t0 = a0
    load 73 t1
    t1 = 0
    store t0 64
    store t1 73
l53:
    load 116 t0
    load 73 t1
    t0 = t1 < 32
    store t0 116
    if t0 == x0 goto l54
    load 117 t0
    load 73 t1
    t2 = 4
    t0 = t1 * t2
    load 118 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 64 t6
    t6 = t3
    load 119 s1
    s1 = t6
    a0 = s1
    store t6 64
    call f_putint
    load 120 t0
    load 73 t1
    t0 = t1 + 1
    t1 = t0
    store t1 73
    goto l53
l54:
    load 121 t0
    loadaddr 0 t1
    t0 = t1 + 0
    load 122 t2
    t2 = t0
    load 123 t3
    loadaddr 32 t4
    t3 = t4 + 0
    load 124 t5
    t5 = t3
    a0 = t2
    a1 = t5
    call f_arrCopy
    load 64 t0
    t0 = a0
    load 73 t1
    t1 = 0
    t0 = 31
    load 126 t2
    loadaddr 32 t3
    t2 = t3 + 0
    load 127 t4
    t4 = t2
    load 128 t5
    t5 = t1
    load 129 t6
    t6 = t0
    a0 = t4
    a1 = t5
    a2 = t6
    store t0 64
    store t1 73
    call f_QuickSort
    load 64 t0
    t0 = a0
    store t0 64
    store a0 130
l55:
    load 131 t0
    load 73 t1
    t0 = t1 < 32
    store t0 131
    if t0 == x0 goto l56
    load 132 t0
    load 73 t1
    t2 = 4
    t0 = t1 * t2
    load 133 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 64 t6
    t6 = t3
    load 134 s1
    s1 = t6
    a0 = s1
    store t6 64
    call f_putint
    load 135 t0
    load 73 t1
    t0 = t1 + 1
    t1 = t0
    store t1 73
    goto l55
l56:
    load 136 t0
    loadaddr 0 t1
    t0 = t1 + 0
    load 137 t2
    t2 = t0
    load 138 t3
    loadaddr 32 t4
    t3 = t4 + 0
    load 139 t5
    t5 = t3
    a0 = t2
    a1 = t5
    call f_arrCopy
    load 64 t0
    t0 = a0
    load 141 t1
    loadaddr 32 t2
    t1 = t2 + 0
    load 142 t3
    t3 = t1
    a0 = t3
    a1 = 4
    store t0 64
    call f_calSum
    load 64 t0
    t0 = a0
    load 73 t1
    t1 = 0
    store t0 64
    store t1 73
l57:
    load 144 t0
    load 73 t1
    t0 = t1 < 32
    store t0 144
    if t0 == x0 goto l58
    load 145 t0
    load 73 t1
    t2 = 4
    t0 = t1 * t2
    load 146 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 64 t6
    t6 = t3
    load 147 s1
    s1 = t6
    a0 = s1
    store t6 64
    call f_putint
    load 148 t0
    load 73 t1
    t0 = t1 + 1
    t1 = t0
    store t1 73
    goto l57
l58:
    load 149 t0
    loadaddr 0 t1
    t0 = t1 + 0
    load 150 t2
    t2 = t0
    load 151 t3
    loadaddr 32 t4
    t3 = t4 + 0
    load 152 t5
    t5 = t3
    a0 = t2
    a1 = t5
    call f_arrCopy
    load 64 t0
    t0 = a0
    load 154 t1
    loadaddr 32 t2
    t1 = t2 + 0
    load 155 t3
    t3 = t1
    a0 = t3
    a1 = 3
    store t0 64
    call f_avgPooling
    load 64 t0
    t0 = a0
    load 73 t1
    t1 = 0
    store t0 64
    store t1 73
l59:
    load 157 t0
    load 73 t1
    t0 = t1 < 32
    store t0 157
    if t0 == x0 goto l60
    load 158 t0
    load 73 t1
    t2 = 4
    t0 = t1 * t2
    load 159 t3
    loadaddr 32 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 64 t6
    t6 = t3
    load 160 s1
    s1 = t6
    a0 = s1
    call f_putint
    load 161 t0
    load 73 t1
    t0 = t1 + 1
    t1 = t0
    store t1 73
    goto l59
l60:
    a0 = 0
    return
end f_main
