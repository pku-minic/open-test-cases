// BEGIN TIGGER
//--- SCALAR DECL
v0 = 0

//--- ARRAY DECL

//--- FUNCTIONS
f_select_sort [2] [0]
// DESTROYS: a1 s4 a2 a0 t6 t4 t5 a3

//     {reg: a2}T1 = 0
    a2 = 0

//     l0:
    l0:

//     {reg: a3}t1 = {reg: a1}p1 - 1
    a3 = a1 + -1

//     if {reg: a2}T1 >= {reg: a3}t1 goto l1
    if a2 >= a3 goto l1

//     {reg: t5}T3 = {reg: a2}T1
    t5 = a2

//     {reg: a3}T2 = {reg: a2}T1 + 1
    a3 = a2 + 1

//     l2:
    l2:

//     if {reg: a3}T2 >= {reg: a1}p1 goto l3
    if a3 >= a1 goto l3

//     {reg: t6}t6 = 4 * {reg: t5}T3
    t6 = t5 * 4 // shift left

//     {reg: t6}t7 = {reg: a0}p0 + {reg: t6}t6
    t6 = a0 + t6

//     {reg: t4}t5 = {reg: t6}t7 [0]
    t4 = t6 [0]

//     {reg: s4}t9 = 4 * {reg: a3}T2
    s4 = a3 * 4 // shift left

//     {reg: t6}t10 = {reg: a0}p0 + {reg: s4}t9
    t6 = a0 + s4

//     {reg: t6}t8 = {reg: t6}t10 [0]
    t6 = t6 [0]

//     if {reg: t4}t5 <= {reg: t6}t8 goto l4
    if t4 <= t6 goto l4

//     {reg: t5}T3 = {reg: a3}T2
    t5 = a3

//     l4:
    l4:

//     {reg: a3}T2 = {reg: a3}T2 + 1
    a3 = a3 + 1

//     goto l2
    goto l2

//     l3:
    l3:

//     if {reg: t5}T3 == {reg: a2}T1 goto l5
    if t5 == a2 goto l5

//     {reg: a3}t14 = 4 * {reg: t5}T3
    a3 = t5 * 4 // shift left

//     {reg: a3}t15 = {reg: a0}p0 + {reg: a3}t14
    a3 = a0 + a3

//     {reg: a3}t13 = {reg: a3}t15 [0]
    a3 = a3 [0]

//     {reg: a3}T4 = {reg: a3}t13
    a3 = a3

//     {reg: t6}t17 = 4 * {reg: a2}T1
    t6 = a2 * 4 // shift left

//     {reg: t6}t18 = {reg: a0}p0 + {reg: t6}t17
    t6 = a0 + t6

//     {reg: t6}t16 = {reg: t6}t18 [0]
    t6 = t6 [0]

//     {reg: t5}t19 = 4 * {reg: t5}T3
    t5 = t5 * 4 // shift left

//     {reg: t5}t20 = {reg: a0}p0 + {reg: t5}t19
    t5 = a0 + t5

//     {reg: t5}t20 [0] = {reg: t6}t16
    t5 [0] = t6

//     {reg: t6}t21 = 4 * {reg: a2}T1
    t6 = a2 * 4 // shift left

//     {reg: t6}t22 = {reg: a0}p0 + {reg: t6}t21
    t6 = a0 + t6

//     {reg: t6}t22 [0] = {reg: a3}T4
    t6 [0] = a3

//     l5:
    l5:

//     {reg: a2}T1 = {reg: a2}T1 + 1
    a2 = a2 + 1

//     goto l0
    goto l0

//     l1:
    l1:

//     return 0
    a0 = 0
    return
end f_select_sort

f_main [0] [11]
// DESTROYS: a5 t0 a6 t1 a4 t2 t3 a3 t5 t4 a2 a1 t6 a0 a7 s4

//     {global}T0 = 10
    t0 = 10
    loadaddr v0 t1
    t1 [0] = t0

//     {stk #0 +10}T5 [0] = 4
    loadaddr 0 t1
    t0 = 4
    t1 [0] = t0

//     {stk #0 +10}T5 [4] = 3
    loadaddr 1 t1
    t0 = 3
    t1 [0] = t0

//     {stk #0 +10}T5 [8] = 9
    loadaddr 2 t1
    t0 = 9
    t1 [0] = t0

//     {stk #0 +10}T5 [12] = 2
    loadaddr 3 t1
    t0 = 2
    t1 [0] = t0

//     {stk #0 +10}T5 [16] = 0
    loadaddr 4 t1
    t1 [0] = x0

//     {stk #0 +10}T5 [20] = 1
    loadaddr 5 t1
    t0 = 1
    t1 [0] = t0

//     {stk #0 +10}T5 [24] = 6
    loadaddr 6 t1
    t0 = 6
    t1 [0] = t0

//     {stk #0 +10}T5 [28] = 5
    loadaddr 7 t1
    t0 = 5
    t1 [0] = t0

//     {stk #0 +10}T5 [32] = 7
    loadaddr 8 t1
    t0 = 7
    t1 [0] = t0

//     {stk #0 +10}T5 [36] = 8
    loadaddr 9 t1
    t0 = 8
    t1 [0] = t0

//     {reg: a0}T6 = 0

//     {reg: a0}t25 = {stk #0 +10}T5 + 0
    loadaddr 0 t0
    a0 = t0 + 0



//     param {reg: a0}t25 // #0
//     param {global}T0 // #1
//     {reg: a0}T6 = call f_select_sort
    a0 = a0
    load v0 t1
    a1 = t1
    call f_select_sort
    a0 = a0

//     l6:
    l6:

//     if {reg: a0}T6 >= {global}T0 goto l7
    load v0 t1
    if a0 >= t1 goto l7

//     {reg: s4}t28 = 4 * {reg: a0}T6
    s4 = a0 * 4 // shift left

//     {reg: s4}t29 = {stk #0 +10}T5 + {reg: s4}t28
    loadaddr 0 t0
    s4 = t0 + s4

//     {reg: s4}t27 = {reg: s4}t29 [0]
    s4 = s4 [0]

//     {reg: s4}T7 = {reg: s4}t27
    s4 = s4


//     param {reg: s4}T7 // #0
//     call f_putint
    store a0 10
    a0 = s4
    call f_putint
    load 10 a0

//     {reg: s4}T7 = 10
    s4 = 10


//     param {reg: s4}T7 // #0
//     call f_putch
    store a0 10
    a0 = s4
    call f_putch
    load 10 a0

//     {reg: a0}T6 = {reg: a0}T6 + 1
    a0 = a0 + 1

//     goto l6
    goto l6

//     l7:
    l7:

//     return 0
    a0 = 0
    return
end f_main

// END TIGGER
