// BEGIN TIGGER
//--- SCALAR DECL

//--- ARRAY DECL

//--- FUNCTIONS
f_main [0] [3]
// DESTROYS: a5 t0 a6 t1 s4 a7 t2 t3 t4 t5 a4 a3 t6 a0 a1 a2

//     {reg: a3}T0 = 0
    a3 = 0

//     {reg: a0}T1 = 0
    a0 = 0

//     {reg: a2}T2 = 0

//     l0:
    l0:

//     if {reg: a3}T0 >= 21 goto l1
    t1 = 21
    if a3 >= t1 goto l1

//     l2:
    l2:

//     {reg: a2}t2 = 101 - {reg: a3}T0
    t0 = 101
    a2 = t0 - a3

//     if {reg: a0}T1 >= {reg: a2}t2 goto l3
    if a0 >= a2 goto l3

//     {reg: s4}t4 = 100 - {reg: a3}T0
    t0 = 100
    s4 = t0 - a3

//     {reg: a2}T2 = {reg: s4}t4 - {reg: a0}T1
    a2 = s4 - a0

//     {reg: a1}t8 = 5 * {reg: a3}T0
    t1 = 5
    a1 = a3 * t1

//     {reg: t6}t9 = 1 * {reg: a0}T1
    t6 = a0 // shift 0

//     {reg: a1}t7 = {reg: a1}t8 + {reg: t6}t9
    a1 = a1 + t6

//     {reg: t6}t10 = {reg: a2}T2 / 2
    t6 = a2 / 2 // shift right

//     {reg: a1}t6 = {reg: a1}t7 + {reg: t6}t10
    a1 = a1 + t6

//     if {reg: a1}t6 != 100 goto l4
    t1 = 100
    if a1 != t1 goto l4


//     param {reg: a3}T0 // #0
//     call f_putint
    store a3 0
    store a0 1
    store a2 2
    a0 = a3
    call f_putint
    load 0 a3
    load 1 a0
    load 2 a2


//     param {reg: a0}T1 // #0
//     call f_putint
    store a3 0
    store a0 1
    store a2 2
    a0 = a0
    call f_putint
    load 0 a3
    load 1 a0
    load 2 a2


//     param {reg: a2}T2 // #0
//     call f_putint
    store a3 0
    store a0 1
    a0 = a2
    call f_putint
    load 0 a3
    load 1 a0

//     {reg: a2}T3 = 10
    a2 = 10


//     param {reg: a2}T3 // #0
//     call f_putch
    store a3 0
    store a0 1
    a0 = a2
    call f_putch
    load 0 a3
    load 1 a0

//     l4:
    l4:

//     {reg: a0}T1 = {reg: a0}T1 + 1
    a0 = a0 + 1

//     goto l2
    goto l2

//     l3:
    l3:

//     {reg: a3}T0 = {reg: a3}T0 + 1
    a3 = a3 + 1

//     goto l0
    goto l0

//     l1:
    l1:

//     return 0
    a0 = 0
    return
end f_main

// END TIGGER
