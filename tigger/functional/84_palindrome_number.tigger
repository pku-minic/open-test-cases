// BEGIN TIGGER
//--- SCALAR DECL

//--- ARRAY DECL

//--- FUNCTIONS
f_palindrome [1] [4]
// DESTROYS: a0 a3 s3 a7 s4 a2

//     {reg: s4}T1 = 0
    s4 = 0

//     l0:
    l0:

//     if {reg: s4}T1 >= 4 goto l1
    t1 = 4
    if s4 >= t1 goto l1

//     {reg: a2}t1 = {reg: a0}p0 % 10
    t1 = 10
    a2 = a0 % t1

//     {reg: a3}t2 = 4 * {reg: s4}T1
    a3 = s4 * 4 // shift left

//     {reg: a3}t3 = {stk #0 +4}T0 + {reg: a3}t2
    loadaddr 0 t0
    a3 = t0 + a3

//     {reg: a3}t3 [0] = {reg: a2}t1
    a3 [0] = a2

//     {reg: a0}p0 = {reg: a0}p0 / 10
    t1 = 10
    a0 = a0 / t1

//     {reg: s4}T1 = {reg: s4}T1 + 1
    s4 = s4 + 1

//     goto l0
    goto l0

//     l1:
    l1:

//     {reg: a3}t6 = 0
    a3 = 0

//     {reg: s3}t8 = {stk #0 +4}T0 [0]
    loadaddr 0 t1
    s3 = t1 [0]

//     {reg: a7}t9 = {stk #0 +4}T0 [12]
    loadaddr 3 t1
    a7 = t1 [0]

//     if {reg: s3}t8 != {reg: a7}t9 goto l2
    if s3 != a7 goto l2

//     {reg: a2}t11 = {stk #0 +4}T0 [4]
    loadaddr 1 t1
    a2 = t1 [0]

//     {reg: s4}t12 = {stk #0 +4}T0 [8]
    loadaddr 2 t1
    s4 = t1 [0]

//     if {reg: a2}t11 != {reg: s4}t12 goto l2
    if a2 != s4 goto l2

//     {reg: a3}t6 = 1
    a3 = 1

//     l2:
    l2:

//     if {reg: a3}t6 == 0 goto l3
    if a3 == x0 goto l3

//     {reg: a0}T2 = 1
    a0 = 1

//     goto l4
    goto l4

//     l3:
    l3:

//     {reg: a0}T2 = 0
    a0 = 0

//     l4:
    l4:

//     return {reg: a0}T2
    a0 = a0
    return
end f_palindrome

f_main [0] [1]
// DESTROYS: a5 t0 t1 s4 t2 t3 t4 t5 a1 a4 a2 a7 s3 a6 a0 t6 a3

//     {reg: a0}T3 = 1221
    a0 = 1221


//     param {reg: a0}T3 // #0
//     {reg: s4}T4 = call f_palindrome
    store a0 0
    a0 = a0
    call f_palindrome
    s4 = a0
    load 0 a0

//     if {reg: s4}T4 != 1 goto l5
    t1 = 1
    if s4 != t1 goto l5


//     param {reg: a0}T3 // #0
//     call f_putint
    a0 = a0
    call f_putint

//     goto l6
    goto l6

//     l5:
    l5:

//     {reg: s4}T4 = 0
    s4 = 0


//     param {reg: s4}T4 // #0
//     call f_putint
    a0 = s4
    call f_putint

//     l6:
    l6:

//     {reg: s4}T4 = 10
    s4 = 10


//     param {reg: s4}T4 // #0
//     call f_putch
    a0 = s4
    call f_putch

//     return 0
    a0 = 0
    return
end f_main

// END TIGGER
