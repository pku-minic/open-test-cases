// BEGIN TIGGER
//--- SCALAR DECL

//--- ARRAY DECL
v0 = malloc 8

//--- FUNCTIONS
f_func [1] [0]
// DESTROYS: a0 s4

//     {reg: s4}t3 = {global}T0 [0]
    loadaddr v0 t1
    s4 = t1 [0]

//     {reg: s4}t2 = 3 - {reg: s4}t3
    t0 = 3
    s4 = t0 - s4

//     {reg: s4}t1 = 4 * {reg: s4}t2
    s4 = s4 * 4 // shift left

//     {reg: s4}t4 = {reg: a0}p0 + {reg: s4}t1
    s4 = a0 + s4

//     {reg: a0}t0 = {reg: s4}t4 [0]
    a0 = s4 [0]

//     return {reg: a0}t0
    a0 = a0
    return
end f_func

f_main [0] [6]
// DESTROYS: a3 s4 a0

//     {global}T0 [0] = 1
    loadaddr v0 t1
    t0 = 1
    t1 [0] = t0

//     {global}T0 [4] = 2
    loadaddr v0 t1
    t0 = 2
    t1 [4] = t0

//     {stk #1 +3}T2 [0] = -1
    loadaddr 1 t1
    t0 = -1
    t1 [0] = t0

//     {reg: s4}t6 = {stk #1 +3}T2 [0]
    loadaddr 1 t1
    s4 = t1 [0]

//     {reg: s4}t5 = {reg: s4}t6 - 2
    s4 = s4 + -2

//     {stk #1 +3}T2 [4] = {reg: s4}t5
    loadaddr 2 t1
    t1 [0] = s4

//     {reg: s4}t7 = {stk #1 +3}T2 [4]
    loadaddr 2 t1
    s4 = t1 [0]

//     {reg: s4}T3 = {reg: s4}t7
    s4 = s4

//     {stk #1 +3}T2 [8] = 16
    loadaddr 3 t1
    t0 = 16
    t1 [0] = t0

//     {reg: a0}t11 = {stk #1 +3}T2 + 0
    loadaddr 1 t0
    a0 = t0 + 0


//     param {reg: a0}t11 // #0
//     {reg: a0}t10 = call f_func
    store s4 4
    a0 = a0
    call f_func
    a0 = a0
    load 4 s4

//     {reg: a3}t9 = {reg: a0}t10 + 2
    a3 = a0 + 2

//     {reg: a0}t8 = {reg: a3}t9 + {reg: s4}T3
    a0 = a3 + s4

//     return {reg: a0}t8
    a0 = a0
    return
end f_main

// END TIGGER
