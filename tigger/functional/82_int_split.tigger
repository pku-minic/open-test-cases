// BEGIN TIGGER
//--- SCALAR DECL
v1 = 0
v0 = 0

//--- ARRAY DECL

//--- FUNCTIONS
f_split [2] [0]
// DESTROYS: a2 a1 s4 a3 t6 a0

//     {reg: a2}T2 = {global}T0 - 1
    load v0 t0
    a2 = t0 + -1

//     l0:
    l0:

//     if {reg: a2}T2 == -1 goto l1
    t1 = -1
    if a2 == t1 goto l1

//     {reg: a3}t2 = {reg: a0}p0 % 10
    t1 = 10
    a3 = a0 % t1

//     {reg: s4}t3 = 4 * {reg: a2}T2
    s4 = a2 * 4 // shift left

//     {reg: t6}t4 = {reg: a1}p1 + {reg: s4}t3
    t6 = a1 + s4

//     {reg: t6}t4 [0] = {reg: a3}t2
    t6 [0] = a3

//     {reg: a0}p0 = {reg: a0}p0 / 10
    t1 = 10
    a0 = a0 / t1

//     {reg: a2}T2 = {reg: a2}T2 - 1
    a2 = a2 + -1

//     goto l0
    goto l0

//     l1:
    l1:

//     return 0
    a0 = 0
    return
end f_split

f_main [0] [6]
// DESTROYS: a5 t0 a7 s3 t1 t2 t3 t4 t5 a4 a2 a1 s4 a3 a6 a0 t6

//     {global}T0 = 4
    t0 = 4
    loadaddr v0 t1
    t1 [0] = t0

//     {global}T1 = 10
    t0 = 10
    loadaddr v1 t1
    t1 [0] = t0

//     {reg: a0}T4 = 1478
    a0 = 1478

//     {reg: a1}t8 = {stk #0 +4}T5 + 0
    loadaddr 0 t0
    a1 = t0 + 0



//     param {reg: a0}T4 // #0
//     param {reg: a1}t8 // #1
//     {reg: a0}T4 = call f_split
    a0 = a0
    a1 = a1
    call f_split

//     {reg: a3}T3 = 0
    a3 = 0

//     l2:
    l2:

//     if {reg: a3}T3 >= 4 goto l3
    t1 = 4
    if a3 >= t1 goto l3

//     {reg: s4}t11 = 4 * {reg: a3}T3
    s4 = a3 * 4 // shift left

//     {reg: s3}t12 = {stk #0 +4}T5 + {reg: s4}t11
    loadaddr 0 t0
    s3 = t0 + s4

//     {reg: a0}t10 = {reg: s3}t12 [0]
    a0 = s3 [0]

//     {reg: a0}T6 = {reg: a0}t10
    a0 = a0


//     param {reg: a0}T6 // #0
//     call f_putint
    store a3 4
    a0 = a0
    call f_putint
    load 4 a3


//     param {global}T1 // #0
//     call f_putch
    store a3 4
    load v1 t1
    a0 = t1
    call f_putch
    load 4 a3

//     {reg: a3}T3 = {reg: a3}T3 + 1
    a3 = a3 + 1

//     goto l2
    goto l2

//     l3:
    l3:

//     return 0
    a0 = 0
    return
end f_main

// END TIGGER
