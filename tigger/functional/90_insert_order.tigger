// BEGIN TIGGER
//--- SCALAR DECL
v0 = 0

//--- ARRAY DECL

//--- FUNCTIONS
f_insert [2] [0]
// DESTROYS: s3 a3 a0 t6 a1 a7 s4 a2

//     {reg: a7}T1 = 0
    a7 = 0

//     l0:
    l0:

//     {reg: a3}t0 = 0
    a3 = 0

//     {reg: s3}t3 = 4 * {reg: a7}T1
    s3 = a7 * 4 // shift left

//     {reg: a2}t4 = {reg: a0}p0 + {reg: s3}t3
    a2 = a0 + s3

//     {reg: s4}t2 = {reg: a2}t4 [0]
    s4 = a2 [0]

//     if {reg: a1}p1 <= {reg: s4}t2 goto l2
    if a1 <= s4 goto l2

//     if {reg: a7}T1 >= {global}T0 goto l2
    load v0 t1
    if a7 >= t1 goto l2

//     {reg: a3}t0 = 1
    a3 = 1

//     l2:
    l2:

//     if {reg: a3}t0 == 0 goto l1
    if a3 == x0 goto l1

//     {reg: a7}T1 = {reg: a7}T1 + 1
    a7 = a7 + 1

//     goto l0
    goto l0

//     l1:
    l1:

//     {reg: a3}T2 = {global}T0
    load v0 t1
    a3 = t1

//     l3:
    l3:

//     if {reg: a3}T2 <= {reg: a7}T1 goto l4
    if a3 <= a7 goto l4

//     {reg: a2}t10 = {reg: a3}T2 - 1
    a2 = a3 + -1

//     {reg: a2}t9 = 4 * {reg: a2}t10
    a2 = a2 * 4 // shift left

//     {reg: s4}t11 = {reg: a0}p0 + {reg: a2}t9
    s4 = a0 + a2

//     {reg: a2}t8 = {reg: s4}t11 [0]
    a2 = s4 [0]

//     {reg: t6}t12 = 4 * {reg: a3}T2
    t6 = a3 * 4 // shift left

//     {reg: t6}t13 = {reg: a0}p0 + {reg: t6}t12
    t6 = a0 + t6

//     {reg: t6}t13 [0] = {reg: a2}t8
    t6 [0] = a2

//     {reg: a2}t14 = 4 * {reg: a7}T1
    a2 = a7 * 4 // shift left

//     {reg: a2}t15 = {reg: a0}p0 + {reg: a2}t14
    a2 = a0 + a2

//     {reg: a2}t15 [0] = {reg: a1}p1
    a2 [0] = a1

//     {reg: a3}T2 = {reg: a3}T2 - 1
    a3 = a3 + -1

//     goto l3
    goto l3

//     l4:
    l4:

//     return 0
    a0 = 0
    return
end f_insert

f_main [0] [14]
// DESTROYS: a5 t0 a6 t1 t2 t3 t4 t5 a1 a2 a4 s4 a7 s3 a3 a0 t6

//     {global}T0 = 10
    t0 = 10
    loadaddr v0 t1
    t1 [0] = t0

//     {stk #0 +11}T3 [0] = 1
    loadaddr 0 t1
    t0 = 1
    t1 [0] = t0

//     {stk #0 +11}T3 [4] = 3
    loadaddr 1 t1
    t0 = 3
    t1 [0] = t0

//     {stk #0 +11}T3 [8] = 4
    loadaddr 2 t1
    t0 = 4
    t1 [0] = t0

//     {stk #0 +11}T3 [12] = 7
    loadaddr 3 t1
    t0 = 7
    t1 [0] = t0

//     {stk #0 +11}T3 [16] = 8
    loadaddr 4 t1
    t0 = 8
    t1 [0] = t0

//     {stk #0 +11}T3 [20] = 11
    loadaddr 5 t1
    t0 = 11
    t1 [0] = t0

//     {stk #0 +11}T3 [24] = 13
    loadaddr 6 t1
    t0 = 13
    t1 [0] = t0

//     {stk #0 +11}T3 [28] = 18
    loadaddr 7 t1
    t0 = 18
    t1 [0] = t0

//     {stk #0 +11}T3 [32] = 56
    loadaddr 8 t1
    t0 = 56
    t1 [0] = t0

//     {stk #0 +11}T3 [36] = 78
    loadaddr 9 t1
    t0 = 78
    t1 [0] = t0

//     {reg: s4}T5 = 0
    s4 = 0

//     {reg: a3}T4 = call f_getint
    call f_getint
    a3 = a0

//     {reg: a0}t19 = {stk #0 +11}T3 + 0
    loadaddr 0 t0
    a0 = t0 + 0



//     param {reg: a0}t19 // #0
//     param {reg: a3}T4 // #1
//     {reg: a3}T4 = call f_insert
    store s4 11
    a0 = a0
    a1 = a3
    call f_insert
    load 11 s4

//     l5:
    l5:

//     if {reg: s4}T5 >= {global}T0 goto l6
    load v0 t1
    if s4 >= t1 goto l6

//     {reg: a3}t22 = 4 * {reg: s4}T5
    a3 = s4 * 4 // shift left

//     {reg: a3}t23 = {stk #0 +11}T3 + {reg: a3}t22
    loadaddr 0 t0
    a3 = t0 + a3

//     {reg: a0}t21 = {reg: a3}t23 [0]
    a0 = a3 [0]

//     {reg: a3}T4 = {reg: a0}t21
    a3 = a0


//     param {reg: a3}T4 // #0
//     call f_putint
    a0 = a3
    call f_putint

//     {reg: a3}T4 = 10
    a3 = 10


//     param {reg: a3}T4 // #0
//     call f_putch
    a0 = a3
    call f_putch

//     {reg: s4}T5 = {reg: s4}T5 + 1
    s4 = s4 + 1

//     goto l5
    goto l5

//     l6:
    l6:

//     return 0
    a0 = 0
    return
end f_main

// END TIGGER
