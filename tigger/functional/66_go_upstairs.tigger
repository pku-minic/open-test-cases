// BEGIN TIGGER
//--- SCALAR DECL

//--- ARRAY DECL

//--- FUNCTIONS
f_climbStairs [1] [10]
// DESTROYS: s4 a3 a0 a2 a1

//     if {reg: a0}p0 >= 4 goto l0
    t1 = 4
    if a0 >= t1 goto l0

//     return {reg: a0}p0
    a0 = a0
    return

//     l0:
    l0:

//     {stk #0 +10}T0 [0] = 0
    loadaddr 0 t1
    t1 [0] = x0

//     {stk #0 +10}T0 [4] = 1
    loadaddr 1 t1
    t0 = 1
    t1 [0] = t0

//     {stk #0 +10}T0 [8] = 2
    loadaddr 2 t1
    t0 = 2
    t1 [0] = t0

//     {reg: a3}T1 = 3
    a3 = 3

//     l1:
    l1:

//     {reg: s4}t2 = {reg: a0}p0 + 1
    s4 = a0 + 1

//     if {reg: a3}T1 >= {reg: s4}t2 goto l2
    if a3 >= s4 goto l2

//     {reg: s4}t6 = {reg: a3}T1 - 1
    s4 = a3 + -1

//     {reg: s4}t5 = 4 * {reg: s4}t6
    s4 = s4 * 4 // shift left

//     {reg: s4}t7 = {stk #0 +10}T0 + {reg: s4}t5
    loadaddr 0 t0
    s4 = t0 + s4

//     {reg: s4}t4 = {reg: s4}t7 [0]
    s4 = s4 [0]

//     {reg: a2}t10 = {reg: a3}T1 - 2
    a2 = a3 + -2

//     {reg: a2}t9 = 4 * {reg: a2}t10
    a2 = a2 * 4 // shift left

//     {reg: a2}t11 = {stk #0 +10}T0 + {reg: a2}t9
    loadaddr 0 t0
    a2 = t0 + a2

//     {reg: a2}t8 = {reg: a2}t11 [0]
    a2 = a2 [0]

//     {reg: a2}t3 = {reg: s4}t4 + {reg: a2}t8
    a2 = s4 + a2

//     {reg: a1}t12 = 4 * {reg: a3}T1
    a1 = a3 * 4 // shift left

//     {reg: a1}t13 = {stk #0 +10}T0 + {reg: a1}t12
    loadaddr 0 t0
    a1 = t0 + a1

//     {reg: a1}t13 [0] = {reg: a2}t3
    a1 [0] = a2

//     {reg: a3}T1 = {reg: a3}T1 + 1
    a3 = a3 + 1

//     goto l1
    goto l1

//     l2:
    l2:

//     {reg: s4}t16 = 4 * {reg: a0}p0
    s4 = a0 * 4 // shift left

//     {reg: s4}t17 = {stk #0 +10}T0 + {reg: s4}t16
    loadaddr 0 t0
    s4 = t0 + s4

//     {reg: a0}t15 = {reg: s4}t17 [0]
    a0 = s4 [0]

//     return {reg: a0}t15
    a0 = a0
    return
end f_climbStairs

f_main [0] [1]
// DESTROYS: a1 a2 s4 a3 a0

//     {reg: a0}T3 = 5
    a0 = 5


//     param {reg: a0}T3 // #0
//     {reg: a0}T2 = call f_climbStairs
    a0 = a0
    call f_climbStairs
    a0 = a0

//     return {reg: a0}T2
    a0 = a0
    return
end f_main

// END TIGGER
