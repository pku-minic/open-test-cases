// BEGIN TIGGER
//--- SCALAR DECL

//--- ARRAY DECL
v0 = malloc 100

//--- FUNCTIONS
f_func [1] [0]
// DESTROYS: a0 a2 a1 a3 s4

//     {reg: s4}T1 = 0
    s4 = 0

//     {reg: a2}T2 = 0
    a2 = 0

//     {reg: a1}T3 = 0
    a1 = 0

//     l0:
    l0:

//     if {reg: s4}T1 >= 5 goto l1
    t1 = 5
    if s4 >= t1 goto l1

//     l2:
    l2:

//     if {reg: a2}T2 >= 5 goto l3
    t1 = 5
    if a2 >= t1 goto l3

//     {reg: a3}t6 = 5 * {reg: s4}T1
    t1 = 5
    a3 = s4 * t1

//     {reg: a3}t5 = {reg: a3}t6 + {reg: a2}T2
    a3 = a3 + a2

//     {reg: a3}t4 = 4 * {reg: a3}t5
    a3 = a3 * 4 // shift left

//     {reg: a3}t7 = {reg: a0}p0 + {reg: a3}t4
    a3 = a0 + a3

//     {reg: a3}t3 = {reg: a3}t7 [0]
    a3 = a3 [0]

//     {reg: a1}T3 = {reg: a1}T3 + {reg: a3}t3
    a1 = a1 + a3

//     {reg: a2}T2 = {reg: a2}T2 + 1
    a2 = a2 + 1

//     goto l2
    goto l2

//     l3:
    l3:

//     {reg: s4}T1 = {reg: s4}T1 + 1
    s4 = s4 + 1

//     goto l0
    goto l0

//     l1:
    l1:

//     return {reg: a1}T3
    a0 = a1
    return
end f_func

f_main [0] [1]
    loadaddr v0 t0
    a0 = 1
    t0 [0] = a0
    a0 = 2
    t0 [4] = a0
    a0 = 3
    t0 [8] = a0
    a0 = 4
    t0 [12] = a0
    a0 = 5
    t0 [16] = a0
// DESTROYS: a5 t0 a6 t1 s4 a7 t2 t3 t4 t5 a4 a3 a1 a2 a0 t6

//     {reg: a0}t11 = {global}T0 + 0
    loadaddr v0 t0
    a0 = t0 + 0


//     param {reg: a0}t11 // #0
//     {reg: a0}t10 = call f_func
    a0 = a0
    call f_func
    a0 = a0


//     param {reg: a0}t10 // #0
//     call f_putint
    a0 = a0
    call f_putint

//     return 0
    a0 = 0
    return
end f_main

// END TIGGER
