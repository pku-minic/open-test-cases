// BEGIN TIGGER
//--- SCALAR DECL
v0 = 0

//--- ARRAY DECL

//--- FUNCTIONS
f_bubblesort [1] [0]
// DESTROYS: s4 a2 a0 t6 a1 a3

//     {reg: s4}T1 = 0
    s4 = 0

//     l0:
    l0:

//     {reg: a3}t1 = {global}T0 - 1
    load v0 t0
    a3 = t0 + -1

//     if {reg: s4}T1 >= {reg: a3}t1 goto l1
    if s4 >= a3 goto l1

//     {reg: a2}T2 = 0
    a2 = 0

//     l2:
    l2:

//     {reg: a3}t4 = {global}T0 - {reg: s4}T1
    load v0 t0
    a3 = t0 - s4

//     {reg: a3}t3 = {reg: a3}t4 - 1
    a3 = a3 + -1

//     if {reg: a2}T2 >= {reg: a3}t3 goto l3
    if a2 >= a3 goto l3

//     {reg: a3}t7 = 4 * {reg: a2}T2
    a3 = a2 * 4 // shift left

//     {reg: a3}t8 = {reg: a0}p0 + {reg: a3}t7
    a3 = a0 + a3

//     {reg: a3}t6 = {reg: a3}t8 [0]
    a3 = a3 [0]

//     {reg: a1}t11 = {reg: a2}T2 + 1
    a1 = a2 + 1

//     {reg: a1}t10 = 4 * {reg: a1}t11
    a1 = a1 * 4 // shift left

//     {reg: a1}t12 = {reg: a0}p0 + {reg: a1}t10
    a1 = a0 + a1

//     {reg: a1}t9 = {reg: a1}t12 [0]
    a1 = a1 [0]

//     if {reg: a3}t6 <= {reg: a1}t9 goto l4
    if a3 <= a1 goto l4

//     {reg: a3}t15 = {reg: a2}T2 + 1
    a3 = a2 + 1

//     {reg: a3}t14 = 4 * {reg: a3}t15
    a3 = a3 * 4 // shift left

//     {reg: a3}t16 = {reg: a0}p0 + {reg: a3}t14
    a3 = a0 + a3

//     {reg: a3}t13 = {reg: a3}t16 [0]
    a3 = a3 [0]

//     {reg: t6}T3 = {reg: a3}t13
    t6 = a3

//     {reg: a3}t18 = 4 * {reg: a2}T2
    a3 = a2 * 4 // shift left

//     {reg: a3}t19 = {reg: a0}p0 + {reg: a3}t18
    a3 = a0 + a3

//     {reg: a1}t17 = {reg: a3}t19 [0]
    a1 = a3 [0]

//     {reg: a3}t21 = {reg: a2}T2 + 1
    a3 = a2 + 1

//     {reg: a3}t20 = 4 * {reg: a3}t21
    a3 = a3 * 4 // shift left

//     {reg: a3}t22 = {reg: a0}p0 + {reg: a3}t20
    a3 = a0 + a3

//     {reg: a3}t22 [0] = {reg: a1}t17
    a3 [0] = a1

//     {reg: a3}t23 = 4 * {reg: a2}T2
    a3 = a2 * 4 // shift left

//     {reg: a3}t24 = {reg: a0}p0 + {reg: a3}t23
    a3 = a0 + a3

//     {reg: a3}t24 [0] = {reg: t6}T3
    a3 [0] = t6

//     l4:
    l4:

//     {reg: a2}T2 = {reg: a2}T2 + 1
    a2 = a2 + 1

//     goto l2
    goto l2

//     l3:
    l3:

//     {reg: s4}T1 = {reg: s4}T1 + 1
    s4 = s4 + 1

//     goto l0
    goto l0

//     l1:
    l1:

//     return 0
    a0 = 0
    return
end f_bubblesort

f_main [0] [12]
// DESTROYS: a5 t0 a6 t1 t2 t3 t4 t5 a4 a1 a2 t6 a0 a7 s4 a3

//     {global}T0 = 10
    t0 = 10
    loadaddr v0 t1
    t1 [0] = t0

//     {stk #0 +10}T4 [0] = 4
    loadaddr 0 t1
    t0 = 4
    t1 [0] = t0

//     {stk #0 +10}T4 [4] = 3
    loadaddr 1 t1
    t0 = 3
    t1 [0] = t0

//     {stk #0 +10}T4 [8] = 9
    loadaddr 2 t1
    t0 = 9
    t1 [0] = t0

//     {stk #0 +10}T4 [12] = 2
    loadaddr 3 t1
    t0 = 2
    t1 [0] = t0

//     {stk #0 +10}T4 [16] = 0
    loadaddr 4 t1
    t1 [0] = x0

//     {stk #0 +10}T4 [20] = 1
    loadaddr 5 t1
    t0 = 1
    t1 [0] = t0

//     {stk #0 +10}T4 [24] = 6
    loadaddr 6 t1
    t0 = 6
    t1 [0] = t0

//     {stk #0 +10}T4 [28] = 5
    loadaddr 7 t1
    t0 = 5
    t1 [0] = t0

//     {stk #0 +10}T4 [32] = 7
    loadaddr 8 t1
    t0 = 7
    t1 [0] = t0

//     {stk #0 +10}T4 [36] = 8
    loadaddr 9 t1
    t0 = 8
    t1 [0] = t0

//     {reg: a0}t28 = {stk #0 +10}T4 + 0
    loadaddr 0 t0
    a0 = t0 + 0


//     param {reg: a0}t28 // #0
//     {reg: a3}T5 = call f_bubblesort
    a0 = a0
    call f_bubblesort
    a3 = a0

//     l5:
    l5:

//     if {reg: a3}T5 >= {global}T0 goto l6
    load v0 t1
    if a3 >= t1 goto l6

//     {reg: s4}t31 = 4 * {reg: a3}T5
    s4 = a3 * 4 // shift left

//     {reg: s4}t32 = {stk #0 +10}T4 + {reg: s4}t31
    loadaddr 0 t0
    s4 = t0 + s4

//     {reg: a0}t30 = {reg: s4}t32 [0]
    a0 = s4 [0]

//     {reg: a0}T6 = {reg: a0}t30
    a0 = a0


//     param {reg: a0}T6 // #0
//     call f_putint
    store a3 10
    a0 = a0
    call f_putint
    load 10 a3

//     {reg: a0}T6 = 10
    a0 = 10


//     param {reg: a0}T6 // #0
//     call f_putch
    store a3 10
    a0 = a0
    call f_putch
    load 10 a3

//     {reg: a3}T5 = {reg: a3}T5 + 1
    a3 = a3 + 1

//     goto l5
    goto l5

//     l6:
    l6:

//     return 0
    a0 = 0
    return
end f_main

// END TIGGER
