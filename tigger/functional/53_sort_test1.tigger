v0 = 0
f_bubblesort [1] [25]
    load 1 t0
    t0 = 0
    store t0 1
    store a0 0
l0:
    load 3 t0
    load v0 t1
    t0 = t1 + -1
    load 4 t2
    load 1 t3
    t2 = t3 < t0
    store t2 4
    if t2 == x0 goto l4
    load 2 t0
    t0 = 0
    store t0 2
l1:
    load 5 t0
    load v0 t1
    load 1 t2
    t0 = t1 - t2
    load 6 t3
    t3 = t0 + -1
    load 7 t4
    load 2 t5
    t4 = t5 < t3
    store t4 7
    if t4 == x0 goto l3
    load 8 t0
    load 2 t1
    t2 = 4
    t0 = t1 * t2
    load 9 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 10 t6
    t6 = t1 + 1
    load 11 s1
    s2 = 4
    s1 = t6 * s2
    load 12 s3
    s4 = t4 + s1
    s3 = s4 [0]
    load 13 s5
    s5 = t3 > s3
    store s5 13
    if s5 == x0 goto l2
    load 15 t0
    load 2 t1
    t0 = t1 + 1
    load 16 t2
    t3 = 4
    t2 = t0 * t3
    load 17 t4
    load 0 t5
    t6 = t5 + t2
    t4 = t6 [0]
    load 14 s1
    s1 = t4
    load 18 s2
    s2 = t1 + 1
    load 19 s3
    s4 = 4
    s3 = s2 * s4
    load 20 s5
    s6 = 4
    s5 = t1 * s6
    load 21 s7
    s8 = t5 + s5
    s7 = s8 [0]
    s9 = t5 + s3
    s9 [0] = s7
    load 22 s10
    s11 = 4
    s10 = t1 * s11
    a0 = t5 + s10
    a0 [0] = s1
    store s1 14
    store s10 22
l2:
    load 23 t0
    load 2 t1
    t0 = t1 + 1
    t1 = t0
    store t1 2
    goto l1
l3:
    load 24 t0
    load 1 t1
    t0 = t1 + 1
    t1 = t0
    store t1 1
    goto l0
l4:
    a0 = 0
    return
end f_bubblesort
f_main [0] [21]
    load v0 t0
    t0 = 10
    loadaddr 0 t1
    t2 = 4
    t1 [0] = t2
    t3 = 3
    t1 [4] = t3
    t4 = 9
    t1 [8] = t4
    t5 = 2
    t1 [12] = t5
    t1 [16] = x0
    t6 = 1
    t1 [20] = t6
    s1 = 6
    t1 [24] = s1
    s2 = 5
    t1 [28] = s2
    s3 = 7
    t1 [32] = s3
    s4 = 8
    t1 [36] = s4
    load 11 s5
    s5 = t1 + 0
    load 12 s6
    s6 = s5
    a0 = s6
    loadaddr v0 s0
    s0 [0] = t0
    call f_bubblesort
    load 10 t0
    t0 = a0
    store t0 10
    store a0 13
l5:
    load 14 t0
    load 10 t1
    load v0 t2
    t0 = t1 < t2
    store t0 14
    if t0 == x0 goto l6
    load 16 t0
    load 10 t1
    t2 = 4
    t0 = t1 * t2
    load 17 t3
    loadaddr 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 15 t6
    t6 = t3
    load 18 s1
    s1 = t6
    a0 = s1
    store t6 15
    call f_putint
    load 15 t0
    t0 = 10
    load 19 t1
    t1 = t0
    a0 = t1
    call f_putch
    load 20 t0
    load 10 t1
    t0 = t1 + 1
    t1 = t0
    store t1 10
    goto l5
l6:
    a0 = 0
    return
end f_main
