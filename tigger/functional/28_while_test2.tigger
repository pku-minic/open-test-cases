// BEGIN TIGGER
//--- SCALAR DECL

//--- ARRAY DECL

//--- FUNCTIONS
f_FourWhile [0] [0]
// DESTROYS: a2 a1 s4 a3 a0

//     {reg: s4}T0 = 5
    s4 = 5

//     {reg: a3}T1 = 6
    a3 = 6

//     {reg: a2}T2 = 7
    a2 = 7

//     {reg: a1}T3 = 10
    a1 = 10

//     l0:
    l0:

//     if {reg: s4}T0 >= 20 goto l1
    t1 = 20
    if s4 >= t1 goto l1

//     {reg: s4}T0 = {reg: s4}T0 + 3
    s4 = s4 + 3

//     l2:
    l2:

//     if {reg: a3}T1 >= 10 goto l3
    t1 = 10
    if a3 >= t1 goto l3

//     {reg: a3}T1 = {reg: a3}T1 + 1
    a3 = a3 + 1

//     l4:
    l4:

//     if {reg: a2}T2 != 7 goto l5
    t1 = 7
    if a2 != t1 goto l5

//     {reg: a2}T2 = {reg: a2}T2 - 1
    a2 = a2 + -1

//     l6:
    l6:

//     if {reg: a1}T3 >= 20 goto l7
    t1 = 20
    if a1 >= t1 goto l7

//     {reg: a1}T3 = {reg: a1}T3 + 3
    a1 = a1 + 3

//     goto l6
    goto l6

//     l7:
    l7:

//     {reg: a1}T3 = {reg: a1}T3 - 1
    a1 = a1 + -1

//     goto l4
    goto l4

//     l5:
    l5:

//     {reg: a2}T2 = {reg: a2}T2 + 1
    a2 = a2 + 1

//     goto l2
    goto l2

//     l3:
    l3:

//     {reg: a3}T1 = {reg: a3}T1 - 2
    a3 = a3 + -2

//     goto l0
    goto l0

//     l1:
    l1:

//     {reg: a3}t13 = {reg: a3}T1 + {reg: a1}T3
    a3 = a3 + a1

//     {reg: s4}t12 = {reg: s4}T0 + {reg: a3}t13
    s4 = s4 + a3

//     {reg: a0}t11 = {reg: s4}t12 + {reg: a2}T2
    a0 = s4 + a2

//     return {reg: a0}t11
    a0 = a0
    return
end f_FourWhile

f_main [0] [0]
// DESTROYS: a3 s4 a1 a2 a0

//     {reg: a0}t14 = call f_FourWhile
    call f_FourWhile
    a0 = a0

//     return {reg: a0}t14
    a0 = a0
    return
end f_main

// END TIGGER
