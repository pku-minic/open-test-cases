// BEGIN TIGGER
//--- SCALAR DECL
v0 = 0

//--- ARRAY DECL
v1 = malloc 40

//--- FUNCTIONS
f_main [0] [1]
// DESTROYS: a5 t0 a6 t1 s4 t2 t3 t4 t5 a1 a4 a7 a2 a0 t6 a3

//     {global}T0 = call f_getint
    call f_getint
    loadaddr v0 t1
    t1 [0] = a0

//     if {global}T0 <= 10 goto l0
    load v0 t0
    t1 = 10
    if t0 <= t1 goto l0

//     return 1
    a0 = 1
    return

//     l0:
    l0:

//     {reg: a0}T3 = 0
    a0 = 0

//     {reg: s4}T2 = {reg: a0}T3
    s4 = a0

//     l1:
    l1:

//     if {reg: a0}T3 >= {global}T0 goto l2
    load v0 t1
    if a0 >= t1 goto l2

//     {reg: a3}t3 = call f_getint
    store a0 0
    call f_getint
    a3 = a0
    load 0 a0

//     {reg: a2}t4 = 4 * {reg: a0}T3
    a2 = a0 * 4 // shift left

//     {reg: a2}t5 = {global}T1 + {reg: a2}t4
    loadaddr v1 t0
    a2 = t0 + a2

//     {reg: a2}t5 [0] = {reg: a3}t3
    a2 [0] = a3

//     {reg: a3}t8 = 4 * {reg: a0}T3
    a3 = a0 * 4 // shift left

//     {reg: a3}t9 = {global}T1 + {reg: a3}t8
    loadaddr v1 t0
    a3 = t0 + a3

//     {reg: a3}t7 = {reg: a3}t9 [0]
    a3 = a3 [0]

//     {reg: s4}T2 = {reg: s4}T2 + {reg: a3}t7
    s4 = s4 + a3

//     {reg: a0}T3 = {reg: a0}T3 + 1
    a0 = a0 + 1

//     goto l1
    goto l1

//     l2:
    l2:


//     param {reg: s4}T2 // #0
//     call f_putint
    a0 = s4
    call f_putint

//     {reg: a0}T4 = 10
    a0 = 10


//     param {reg: a0}T4 // #0
//     call f_putch
    a0 = a0
    call f_putch

//     return {reg: s4}T2
    a0 = s4
    return
end f_main

// END TIGGER
