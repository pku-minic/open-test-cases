v0 = 0
f_swap [3] [10]
    load 4 t0
    t1 = 4
    t0 = a1 * t1
    load 5 t2
    t3 = a0 + t0
    t2 = t3 [0]
    load 3 t4
    t4 = t2
    load 6 t5
    t6 = 4
    t5 = a1 * t6
    load 7 s1
    s2 = 4
    s1 = a2 * s2
    load 8 s3
    s4 = a0 + s1
    s3 = s4 [0]
    s5 = a0 + t5
    s5 [0] = s3
    load 9 s6
    s7 = 4
    s6 = a2 * s7
    s8 = a0 + s6
    s8 [0] = t4
    a0 = 0
    return
end f_swap
f_heap_ajust [3] [30]
    load 3 t0
    t0 = a1
    load 5 t1
    t2 = 2
    t1 = t0 * t2
    load 6 t3
    t3 = t1 + 1
    load 4 t4
    t4 = t3
    store t0 3
    store t3 6
    store t4 4
    store a0 0
    store a2 2
l0:
    load 7 t0
    load 2 t1
    t0 = t1 + 1
    load 8 t2
    load 4 t3
    t2 = t3 < t0
    store t2 8
    if t2 == x0 goto l6
    load 9 t0
    load 4 t1
    load 2 t2
    t0 = t1 < t2
    store t0 9
    if t0 == x0 goto l1
    load 11 t0
    load 4 t1
    t2 = 4
    t0 = t1 * t2
    load 12 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 13 t6
    t6 = t1 + 1
    load 14 s1
    s2 = 4
    s1 = t6 * s2
    load 15 s3
    s4 = t4 + s1
    s3 = s4 [0]
    load 16 s5
    s5 = t3 < s3
    store s5 16
    if s5 == x0 goto l1
    load 10 t0
    t0 = 1
    store t0 10
    goto l2
l1:
    load 10 t0
    t0 = 0
    store t0 10
l2:
    load 10 t0
    if t0 == x0 goto l3
    load 17 t0
    load 4 t1
    t0 = t1 + 1
    t1 = t0
    store t0 17
    store t1 4
l3:
    load 18 t0
    load 3 t1
    t2 = 4
    t0 = t1 * t2
    load 19 t3
    load 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 20 t6
    load 4 s1
    s2 = 4
    t6 = s1 * s2
    load 21 s3
    s4 = t4 + t6
    s3 = s4 [0]
    load 22 s5
    s5 = t3 > s3
    store s5 22
    if s5 == x0 goto l4
    a0 = 0
    return
    goto l5
l4:
    load 23 t0
    load 0 t1
    t0 = t1 + 0
    load 24 t2
    t2 = t0
    load 25 t3
    load 3 t4
    t3 = t4
    load 26 t5
    load 4 t6
    t5 = t6
    a0 = t2
    a1 = t3
    a2 = t5
    call f_swap
    load 3 t0
    t0 = a0
    load 4 t1
    t0 = t1
    load 28 t2
    t3 = 2
    t2 = t0 * t3
    load 29 t4
    t4 = t2 + 1
    t1 = t4
    store t0 3
    store t1 4
    store t4 29
    store a0 27
l5:
    goto l0
l6:
    a0 = 0
    return
end f_heap_ajust
f_heap_sort [2] [29]
    load 4 t0
    t1 = 2
    t0 = a1 / t1
    load 5 t2
    t2 = t0 + -1
    load 2 t3
    t3 = t2
    store t2 5
    store t3 2
    store a0 0
    store a1 1
l7:
    load 6 t0
    load 2 t1
    t2 = -1
    t0 = t1 > t2
    store t0 6
    if t0 == x0 goto l8
    load 7 t0
    load 1 t1
    t0 = t1 + -1
    load 3 t2
    t2 = t0
    load 8 t3
    load 0 t4
    t3 = t4 + 0
    load 9 t5
    t5 = t3
    load 10 t6
    load 2 s1
    t6 = s1
    load 11 s2
    s2 = t2
    a0 = t5
    a1 = t6
    a2 = s2
    store t2 3
    call f_heap_ajust
    load 3 t0
    t0 = a0
    load 13 t1
    load 2 t2
    t1 = t2 + -1
    t2 = t1
    store t0 3
    store t2 2
    store a0 12
    goto l7
l8:
    load 14 t0
    load 1 t1
    t0 = t1 + -1
    load 2 t2
    t2 = t0
    store t0 14
    store t2 2
l9:
    load 15 t0
    load 2 t1
    t0 = t1 > x0
    store t0 15
    if t0 == x0 goto l10
    load 16 t0
    t0 = 0
    load 17 t1
    load 0 t2
    t1 = t2 + 0
    load 18 t3
    t3 = t1
    load 19 t4
    t4 = t0
    load 20 t5
    load 2 t6
    t5 = t6
    a0 = t3
    a1 = t4
    a2 = t5
    store t0 16
    call f_swap
    load 3 t0
    t0 = a0
    load 22 t1
    load 2 t2
    t1 = t2 + -1
    t0 = t1
    load 23 t3
    load 0 t4
    t3 = t4 + 0
    load 24 t5
    t5 = t3
    load 25 t6
    load 16 s1
    t6 = s1
    load 26 s2
    s2 = t0
    store a0 21
    a0 = t5
    a1 = t6
    a2 = s2
    call f_heap_ajust
    t0 = a0
    load 28 t1
    load 2 t2
    t1 = t2 + -1
    t2 = t1
    store t2 2
    store a0 27
    goto l9
l10:
    a0 = 0
    return
end f_heap_sort
f_main [0] [22]
    load v0 t0
    t0 = 10
    loadaddr 0 t1
    t2 = 4
    t1 [0] = t2
    t3 = 3
    t1 [4] = t3
    t4 = 9
    t1 [8] = t4
    t5 = 2
    t1 [12] = t5
    t1 [16] = x0
    t6 = 1
    t1 [20] = t6
    s1 = 6
    t1 [24] = s1
    s2 = 5
    t1 [28] = s2
    s3 = 7
    t1 [32] = s3
    s4 = 8
    t1 [36] = s4
    load 10 s5
    s5 = 0
    load 11 s6
    s6 = t1 + 0
    load 12 s7
    s7 = s6
    load 13 s8
    s8 = t0
    a0 = s7
    a1 = s8
    store s5 10
    loadaddr v0 s0
    s0 [0] = t0
    call f_heap_sort
    load 10 t0
    t0 = a0
    store t0 10
    store a0 14
l11:
    load 15 t0
    load 10 t1
    load v0 t2
    t0 = t1 < t2
    store t0 15
    if t0 == x0 goto l12
    load 17 t0
    load 10 t1
    t2 = 4
    t0 = t1 * t2
    load 18 t3
    loadaddr 0 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 16 t6
    t6 = t3
    load 19 s1
    s1 = t6
    a0 = s1
    store t6 16
    call f_putint
    load 16 t0
    t0 = 10
    load 20 t1
    t1 = t0
    a0 = t1
    call f_putch
    load 21 t0
    load 10 t1
    t0 = t1 + 1
    t1 = t0
    store t1 10
    goto l11
l12:
    a0 = 0
    return
end f_main
