v0 = 0
v1 = malloc 120000040
v2 = 0
f_getMaxNum [2] [11]
    load 2 t0
    t0 = 0
    load 3 t1
    t1 = 0
    store t0 2
    store t1 3
    store a0 0
    store a1 1
l0:
    load 4 t0
    load 3 t1
    load 0 t2
    t0 = t1 < t2
    store t0 4
    if t0 == x0 goto l2
    load 5 t0
    load 3 t1
    t2 = 4
    t0 = t1 * t2
    load 6 t3
    load 1 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 7 t6
    load 2 s1
    t6 = t3 > s1
    store t6 7
    if t6 == x0 goto l1
    load 8 t0
    load 3 t1
    t2 = 4
    t0 = t1 * t2
    load 9 t3
    load 1 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 2 t6
    t6 = t3
    store t3 9
    store t6 2
l1:
    load 10 t0
    load 3 t1
    t0 = t1 + 1
    t1 = t0
    store t1 3
    goto l0
l2:
    load 2 a0
    return
end f_getMaxNum
f_getNumPos [2] [8]
    load 2 t0
    t0 = 1
    load 3 t1
    t1 = 0
    store t1 3
    store a0 0
    store a1 1
l3:
    load 4 t0
    load 3 t1
    load 1 t2
    t0 = t1 < t2
    store t0 4
    if t0 == x0 goto l4
    load 5 t0
    load 0 t1
    t2 = 16
    t0 = t1 / t2
    t1 = t0
    load 6 t3
    load 3 t4
    t3 = t4 + 1
    t4 = t3
    store t1 0
    store t4 3
    goto l3
l4:
    load 7 t0
    load 0 t1
    t2 = 16
    t0 = t1 % t2
    a0 = t0
    store t0 7
    return
end f_getNumPos
f_radixSort [4] [156]
    load 52 t0
    t1 = -1
    t0 = a0 == t1
    store t0 52
    store a0 0
    store a1 1
    store a2 2
    store a3 3
    if t0 != x0 goto l5
    load 54 t0
    load 2 t1
    t0 = t1 + 1
    load 56 t2
    load 3 t3
    t2 = t0 < t3
    load 55 t4
    t4 = t2 == x0
    store t4 55
    if t4 != x0 goto l5
    load 53 t0
    t0 = 0
    store t0 53
    goto l6
l5:
    load 53 t0
    t0 = 1
    store t0 53
l6:
    load 53 t0
    if t0 == x0 goto l7
    a0 = 0
    return
l7:
    load 57 t0
    load 2 t1
    t0 = t1
    store t0 57
l8:
    load 58 t0
    load 57 t1
    load 3 t2
    t0 = t1 < t2
    store t0 58
    if t0 == x0 goto l9
    load 59 t0
    load 57 t1
    t2 = 4
    t0 = t1 * t2
    load 60 t3
    load 1 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 61 t6
    load 0 s1
    t6 = s1
    a0 = t3
    a1 = t6
    call f_getNumPos
    load 63 t0
    t1 = 4
    t0 = a0 * t1
    load 64 t3
    load 57 t4
    t6 = 4
    t3 = t4 * t6
    load 65 s1
    load 1 s2
    s3 = s2 + t3
    s1 = s3 [0]
    load 66 s4
    load 0 s5
    s4 = s5
    store a0 62
    a0 = s1
    a1 = s4
    store t0 63
    call f_getNumPos
    load 68 t0
    t3 = 4
    t0 = a0 * t3
    load 69 t4
    loadaddr 36 s1
    s2 = s1 + t0
    t4 = s2 [0]
    load 70 s4
    s4 = t4 + 1
    load 63 s5
    s6 = s1 + s5
    s6 [0] = s4
    load 71 s7
    load 57 s8
    s7 = s8 + 1
    s8 = s7
    store s8 57
    store a0 67
    goto l8
l9:
    loadaddr 4 t0
    load 2 t1
    t0 [0] = t1
    load 72 t2
    loadaddr 36 t3
    t2 = t3 [0]
    load 73 t4
    t4 = t1 + t2
    loadaddr 20 t5
    t5 [0] = t4
    load 57 t6
    t6 = 1
    store t6 57
l10:
    load 74 t0
    load 57 t1
    t0 = t1 < 16
    store t0 74
    if t0 == x0 goto l11
    load 75 t0
    load 57 t1
    t2 = 4
    t0 = t1 * t2
    load 76 t3
    t3 = t1 + -1
    load 77 t4
    t5 = 4
    t4 = t3 * t5
    load 78 t6
    loadaddr 20 s1
    s2 = s1 + t4
    t6 = s2 [0]
    loadaddr 4 s3
    s4 = s3 + t0
    s4 [0] = t6
    load 79 s5
    s6 = 4
    s5 = t1 * s6
    load 80 s7
    s8 = 4
    s7 = t1 * s8
    load 81 s9
    s10 = s3 + s7
    s9 = s10 [0]
    load 82 s11
    a0 = 4
    s11 = t1 * a0
    load 83 a1
    loadaddr 36 a2
    a3 = a2 + s11
    a1 = a3 [0]
    load 84 a4
    a4 = s9 + a1
    a5 = s1 + s5
    a5 [0] = a4
    load 85 a6
    a6 = t1 + 1
    t1 = a6
    store t1 57
    goto l10
l11:
    load 57 t0
    t0 = 0
    store t0 57
l12:
    load 86 t0
    load 57 t1
    t0 = t1 < 16
    store t0 86
    if t0 == x0 goto l17
l13:
    load 87 t0
    load 57 t1
    t2 = 4
    t0 = t1 * t2
    load 88 t3
    loadaddr 4 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 89 t6
    s1 = 4
    t6 = t1 * s1
    load 90 s2
    loadaddr 20 s3
    s4 = s3 + t6
    s2 = s4 [0]
    load 91 s5
    s5 = t3 < s2
    store s5 91
    if s5 == x0 goto l16
    load 93 t0
    load 57 t1
    t2 = 4
    t0 = t1 * t2
    load 94 t3
    loadaddr 4 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 95 t6
    s1 = 4
    t6 = t3 * s1
    load 92 s2
    load 1 s3
    s4 = s3 + t6
    s2 = s4 [0]
    store s2 92
    store t6 95
l14:
    load 96 t0
    load 92 t1
    t0 = t1
    load 97 t2
    load 0 t3
    t2 = t3
    a0 = t0
    a1 = t2
    call f_getNumPos
    load 99 t0
    load 57 t1
    t0 = a0 != t1
    store t0 99
    store a0 98
    if t0 == x0 goto l15
    load 100 t0
    load 92 t1
    t0 = t1
    load 101 t2
    t2 = t0
    load 102 t3
    load 0 t4
    t3 = t4
    a0 = t2
    a1 = t3
    store t0 100
    call f_getNumPos
    load 104 t0
    t1 = 4
    t0 = a0 * t1
    load 105 t2
    loadaddr 4 t3
    t4 = t3 + t0
    t2 = t4 [0]
    load 106 t5
    t6 = 4
    t5 = t2 * t6
    load 107 s1
    load 1 s2
    s3 = s2 + t5
    s1 = s3 [0]
    load 92 s4
    s4 = s1
    load 108 s5
    load 100 s6
    s5 = s6
    load 109 s7
    load 0 s8
    s7 = s8
    store a0 103
    a0 = s5
    a1 = s7
    store s4 92
    call f_getNumPos
    load 111 t0
    t2 = 4
    t0 = a0 * t2
    load 112 t3
    loadaddr 4 t5
    s1 = t5 + t0
    t3 = s1 [0]
    load 113 s2
    s4 = 4
    s2 = t3 * s4
    load 1 s5
    load 100 s6
    s7 = s5 + s2
    s7 [0] = s6
    load 114 s8
    s8 = s6
    load 115 s9
    load 0 s10
    s9 = s10
    store a0 110
    a0 = s8
    a1 = s9
    call f_getNumPos
    load 117 t0
    t3 = 4
    t0 = a0 * t3
    load 118 t5
    load 100 s2
    t5 = s2
    load 119 s5
    load 0 s6
    s5 = s6
    store a0 116
    a0 = t5
    a1 = s5
    store t0 117
    call f_getNumPos
    load 121 t0
    t5 = 4
    t0 = a0 * t5
    load 122 s2
    loadaddr 4 s5
    s6 = s5 + t0
    s2 = s6 [0]
    load 123 s8
    s8 = s2 + 1
    load 117 s9
    s10 = s5 + s9
    s10 [0] = s8
    store a0 120
    goto l14
l15:
    load 124 t0
    load 57 t1
    t2 = 4
    t0 = t1 * t2
    load 125 t3
    loadaddr 4 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 126 t6
    s1 = 4
    t6 = t3 * s1
    load 1 s2
    load 92 s3
    s4 = s2 + t6
    s4 [0] = s3
    load 127 s5
    s6 = 4
    s5 = t1 * s6
    load 128 s7
    s8 = 4
    s7 = t1 * s8
    load 129 s9
    s10 = t4 + s7
    s9 = s10 [0]
    load 130 s11
    s11 = s9 + 1
    a0 = t4 + s5
    a0 [0] = s11
    goto l13
l16:
    load 131 t0
    load 57 t1
    t0 = t1 + 1
    t1 = t0
    store t1 57
    goto l12
l17:
    load 132 t0
    load 2 t1
    t0 = t1
    loadaddr 4 t2
    t2 [0] = t1
    load 133 t3
    loadaddr 36 t4
    t3 = t4 [0]
    load 134 t5
    t5 = t1 + t3
    loadaddr 20 t6
    t6 [0] = t5
    t0 = 0
    store t0 132
l18:
    load 135 t0
    load 132 t1
    t0 = t1 < 16
    store t0 135
    if t0 == x0 goto l20
    load 136 t0
    load 132 t1
    t0 = t1 > x0
    store t0 136
    if t0 == x0 goto l19
    load 137 t0
    load 132 t1
    t2 = 4
    t0 = t1 * t2
    load 138 t3
    t3 = t1 + -1
    load 139 t4
    t5 = 4
    t4 = t3 * t5
    load 140 t6
    loadaddr 20 s1
    s2 = s1 + t4
    t6 = s2 [0]
    loadaddr 4 s3
    s4 = s3 + t0
    s4 [0] = t6
    load 141 s5
    s6 = 4
    s5 = t1 * s6
    load 142 s7
    s8 = 4
    s7 = t1 * s8
    load 143 s9
    s10 = s3 + s7
    s9 = s10 [0]
    load 144 s11
    a0 = 4
    s11 = t1 * a0
    load 145 a1
    loadaddr 36 a2
    a3 = a2 + s11
    a1 = a3 [0]
    load 146 a4
    a4 = s9 + a1
    a5 = s1 + s5
    a5 [0] = a4
    store s5 141
    store a4 146
l19:
    load 147 t0
    load 0 t1
    t0 = t1 + -1
    load 148 t2
    t2 = t0
    load 149 t3
    load 1 t4
    t3 = t4 + 0
    load 150 t5
    t5 = t3
    load 151 t6
    load 132 s1
    s2 = 4
    t6 = s1 * s2
    load 152 s3
    loadaddr 4 s4
    s5 = s4 + t6
    s3 = s5 [0]
    load 153 s6
    s7 = 4
    s6 = s1 * s7
    load 154 s8
    loadaddr 20 s9
    s10 = s9 + s6
    s8 = s10 [0]
    a0 = t2
    a1 = t5
    a2 = s3
    a3 = s8
    call f_radixSort
    load 155 t0
    load 132 t1
    t0 = t1 + 1
    t1 = t0
    store t1 132
    goto l18
l20:
    a0 = 0
    return
    a0 = 0
    return
end f_radixSort
f_main [0] [19]
    load v0 t0
    t0 = 16
    load 1 t1
    loadaddr v1 t2
    t1 = t2 + 0
    load 2 t3
    t3 = t1
    a0 = t3
    loadaddr v0 s0
    s0 [0] = t0
    call f_getarray
    load 0 t0
    t0 = a0
    store t0 0
    a0 = 0
    call f__sysy_starttime
    load 4 t0
    loadaddr v1 t1
    t0 = t1 + 0
    load 5 t2
    t2 = t0
    load 6 t3
    load 0 t4
    t3 = t4
    a0 = 8
    a1 = t2
    a2 = 0
    a3 = t3
    call f_radixSort
    load 7 t0
    t0 = 0
    store t0 7
l21:
    load 8 t0
    load 7 t1
    load 0 t2
    t0 = t1 < t2
    store t0 8
    if t0 == x0 goto l22
    load 9 t0
    load 7 t1
    t2 = 4
    t0 = t1 * t2
    load 10 t3
    loadaddr v1 t4
    t5 = t4 + t0
    t3 = t5 [0]
    load 11 t6
    t6 = t1 + 2
    load 12 s1
    s1 = t3 % t6
    load 13 s2
    s2 = t1 * s1
    load 14 s3
    load v2 s4
    s3 = s4 + s2
    s4 = s3
    load 15 s5
    s5 = t1 + 1
    t1 = s5
    loadaddr v2 s0
    s0 [0] = s4
    store t1 7
    goto l21
l22:
    load 16 t0
    load v2 t1
    t0 = t1 < 0
    store t0 16
    if t0 == x0 goto l23
    load 17 t0
    load v2 t1
    t0 = - t1
    t1 = t0
    store t0 17
    loadaddr v2 s0
    s0 [0] = t1
l23:
    a0 = 0
    call f__sysy_stoptime
    load 18 t0
    load v2 t1
    t0 = t1
    a0 = t0
    call f_putint
    a0 = 10
    call f_putch
    a0 = 0
    return
end f_main
